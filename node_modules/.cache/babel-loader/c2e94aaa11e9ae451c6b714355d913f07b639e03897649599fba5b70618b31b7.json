{"ast":null,"code":"import React,{useState,useEffect}from'react';import SwipeableCard from'./SwipeableCard';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";export default function CardDeck(_ref){let{cards,maxVisible=3,className='',onCardRemoved,emptyState}=_ref;const[currentIndex,setCurrentIndex]=useState(0);const[animatingDirection,setAnimatingDirection]=useState(null);// For single card view, show navigation\nconst isSingleCardView=maxVisible===1;useEffect(()=>{// Reset index if it's beyond available cards\nif(currentIndex>=cards.length&&cards.length>0){setCurrentIndex(0);}},[cards.length,currentIndex]);const nextCard=()=>{if(cards.length>1){setAnimatingDirection('left');setTimeout(()=>{setCurrentIndex(prev=>(prev+1)%cards.length);setAnimatingDirection(null);},150);}};const prevCard=()=>{if(cards.length>1){setAnimatingDirection('right');setTimeout(()=>{setCurrentIndex(prev=>(prev-1+cards.length)%cards.length);setAnimatingDirection(null);},150);}};if(cards.length===0){return/*#__PURE__*/_jsx(\"div\",{className:`card-deck empty ${className}`,children:emptyState||/*#__PURE__*/_jsxs(\"div\",{className:\"empty-deck\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"empty-deck-icon\",children:\"\\uD83C\\uDFB4\"}),/*#__PURE__*/_jsx(\"p\",{children:\"No more cards\"})]})});}const visibleCards=isSingleCardView?[cards[currentIndex]]:cards.slice(currentIndex,currentIndex+maxVisible);return/*#__PURE__*/_jsxs(\"div\",{className:`card-deck ${className}`,children:[isSingleCardView&&cards.length>1&&/*#__PURE__*/_jsxs(\"div\",{className:\"deck-navigation\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"nav-btn prev\",onClick:prevCard,children:\"\\u2190\"}),/*#__PURE__*/_jsx(\"div\",{className:\"deck-dots\",children:cards.map((_,i)=>/*#__PURE__*/_jsx(\"div\",{className:`deck-dot ${i===currentIndex?'active':''}`,onClick:()=>setCurrentIndex(i)},i))}),/*#__PURE__*/_jsx(\"button\",{className:\"nav-btn next\",onClick:nextCard,children:\"\\u2192\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"deck-container\",children:visibleCards.map((card,index)=>{const isTop=index===0;const zIndex=maxVisible-index;const scale=isSingleCardView?1:1-index*0.05;const yOffset=isSingleCardView?0:index*8;const rotation=isSingleCardView?0:(index-1)*2;return/*#__PURE__*/_jsx(SwipeableCard,{className:`deck-card ${isTop?'top-card':'stacked-card'} ${animatingDirection?`animating-${animatingDirection}`:''}`,style:{zIndex,transform:`translateY(${yOffset}px) scale(${scale}) rotate(${rotation}deg)`,position:'absolute',top:0,left:0,right:0},onSwipeLeft:isTop&&isSingleCardView?prevCard:card.onSwipeLeft,onSwipeRight:isTop&&isSingleCardView?nextCard:card.onSwipeRight,onSwipeUp:card.onSwipeUp,onSwipeDown:card.onSwipeDown,leftAction:isSingleCardView?'Previous':card.leftAction,rightAction:isSingleCardView?'Next':card.rightAction,upAction:card.upAction,downAction:card.downAction,disabled:!isTop,children:card.content},card.id);})}),cards.length>1&&/*#__PURE__*/_jsxs(\"div\",{className:\"deck-counter\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"current-card\",children:currentIndex+1}),/*#__PURE__*/_jsx(\"span\",{className:\"separator\",children:\" / \"}),/*#__PURE__*/_jsx(\"span\",{className:\"total-cards\",children:cards.length})]})]});}","map":{"version":3,"names":["React","useState","useEffect","SwipeableCard","jsx","_jsx","jsxs","_jsxs","CardDeck","_ref","cards","maxVisible","className","onCardRemoved","emptyState","currentIndex","setCurrentIndex","animatingDirection","setAnimatingDirection","isSingleCardView","length","nextCard","setTimeout","prev","prevCard","children","visibleCards","slice","onClick","map","_","i","card","index","isTop","zIndex","scale","yOffset","rotation","style","transform","position","top","left","right","onSwipeLeft","onSwipeRight","onSwipeUp","onSwipeDown","leftAction","rightAction","upAction","downAction","disabled","content","id"],"sources":["C:/Users/super/OneDrive/Desktop/React progams/who got who/src/components/CardDeck.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport SwipeableCard from './SwipeableCard';\r\n\r\ninterface CardDeckProps {\r\n  cards: Array<{\r\n    id: string;\r\n    content: React.ReactNode;\r\n    leftAction?: string;\r\n    rightAction?: string;\r\n    upAction?: string;\r\n    downAction?: string;\r\n    onSwipeLeft?: () => void;\r\n    onSwipeRight?: () => void;\r\n    onSwipeUp?: () => void;\r\n    onSwipeDown?: () => void;\r\n  }>;\r\n  maxVisible?: number;\r\n  className?: string;\r\n  onCardRemoved?: (cardId: string) => void;\r\n  emptyState?: React.ReactNode;\r\n}\r\n\r\nexport default function CardDeck({\r\n  cards,\r\n  maxVisible = 3,\r\n  className = '',\r\n  onCardRemoved,\r\n  emptyState\r\n}: CardDeckProps) {\r\n  const [currentIndex, setCurrentIndex] = useState(0);\r\n  const [animatingDirection, setAnimatingDirection] = useState<'left' | 'right' | null>(null);\r\n\r\n  // For single card view, show navigation\r\n  const isSingleCardView = maxVisible === 1;\r\n  \r\n  useEffect(() => {\r\n    // Reset index if it's beyond available cards\r\n    if (currentIndex >= cards.length && cards.length > 0) {\r\n      setCurrentIndex(0);\r\n    }\r\n  }, [cards.length, currentIndex]);\r\n\r\n  const nextCard = () => {\r\n    if (cards.length > 1) {\r\n      setAnimatingDirection('left');\r\n      setTimeout(() => {\r\n        setCurrentIndex((prev) => (prev + 1) % cards.length);\r\n        setAnimatingDirection(null);\r\n      }, 150);\r\n    }\r\n  };\r\n\r\n  const prevCard = () => {\r\n    if (cards.length > 1) {\r\n      setAnimatingDirection('right');\r\n      setTimeout(() => {\r\n        setCurrentIndex((prev) => (prev - 1 + cards.length) % cards.length);\r\n        setAnimatingDirection(null);\r\n      }, 150);\r\n    }\r\n  };\r\n\r\n  if (cards.length === 0) {\r\n    return (\r\n      <div className={`card-deck empty ${className}`}>\r\n        {emptyState || (\r\n          <div className=\"empty-deck\">\r\n            <div className=\"empty-deck-icon\">üé¥</div>\r\n            <p>No more cards</p>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  const visibleCards = isSingleCardView \r\n    ? [cards[currentIndex]] \r\n    : cards.slice(currentIndex, currentIndex + maxVisible);\r\n\r\n  return (\r\n    <div className={`card-deck ${className}`}>\r\n      {/* Navigation for single card view */}\r\n      {isSingleCardView && cards.length > 1 && (\r\n        <div className=\"deck-navigation\">\r\n          <button \r\n            className=\"nav-btn prev\"\r\n            onClick={prevCard}\r\n          >\r\n            ‚Üê\r\n          </button>\r\n          \r\n          <div className=\"deck-dots\">\r\n            {cards.map((_, i) => (\r\n              <div\r\n                key={i}\r\n                className={`deck-dot ${i === currentIndex ? 'active' : ''}`}\r\n                onClick={() => setCurrentIndex(i)}\r\n              />\r\n            ))}\r\n          </div>\r\n          \r\n          <button \r\n            className=\"nav-btn next\"\r\n            onClick={nextCard}\r\n          >\r\n            ‚Üí\r\n          </button>\r\n        </div>\r\n      )}\r\n\r\n      {/* Card Stack */}\r\n      <div className=\"deck-container\">\r\n        {visibleCards.map((card, index) => {\r\n          const isTop = index === 0;\r\n          const zIndex = maxVisible - index;\r\n          const scale = isSingleCardView ? 1 : 1 - (index * 0.05);\r\n          const yOffset = isSingleCardView ? 0 : index * 8;\r\n          const rotation = isSingleCardView ? 0 : (index - 1) * 2;\r\n\r\n          return (\r\n            <SwipeableCard\r\n              key={card.id}\r\n              className={`deck-card ${isTop ? 'top-card' : 'stacked-card'} ${animatingDirection ? `animating-${animatingDirection}` : ''}`}\r\n              style={{\r\n                zIndex,\r\n                transform: `translateY(${yOffset}px) scale(${scale}) rotate(${rotation}deg)`,\r\n                position: 'absolute',\r\n                top: 0,\r\n                left: 0,\r\n                right: 0,\r\n              }}\r\n              onSwipeLeft={isTop && isSingleCardView ? prevCard : card.onSwipeLeft}\r\n              onSwipeRight={isTop && isSingleCardView ? nextCard : card.onSwipeRight}\r\n              onSwipeUp={card.onSwipeUp}\r\n              onSwipeDown={card.onSwipeDown}\r\n              leftAction={isSingleCardView ? 'Previous' : card.leftAction}\r\n              rightAction={isSingleCardView ? 'Next' : card.rightAction}\r\n              upAction={card.upAction}\r\n              downAction={card.downAction}\r\n              disabled={!isTop}\r\n            >\r\n              {card.content}\r\n            </SwipeableCard>\r\n          );\r\n        })}\r\n      </div>\r\n\r\n      {/* Card Counter */}\r\n      {cards.length > 1 && (\r\n        <div className=\"deck-counter\">\r\n          <span className=\"current-card\">{currentIndex + 1}</span>\r\n          <span className=\"separator\"> / </span>\r\n          <span className=\"total-cards\">{cards.length}</span>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n} "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}