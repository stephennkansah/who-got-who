{"ast":null,"code":"import React,{useState,useRef,useEffect}from'react';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";export default function SwipeableCard(_ref){let{children,onSwipeLeft,onSwipeRight,onSwipeUp,onSwipeDown,className='',style={},disabled=false,swipeThreshold=100,leftAction='Swipe Left',rightAction='Swipe Right',upAction='Swipe Up',downAction='Swipe Down'}=_ref;const[isDragging,setIsDragging]=useState(false);const[dragOffset,setDragOffset]=useState({x:0,y:0});const[showHint,setShowHint]=useState(false);const cardRef=useRef(null);const startPos=useRef({x:0,y:0});const currentPos=useRef({x:0,y:0});useEffect(()=>{// Show hint animation on mount\nconst timer=setTimeout(()=>setShowHint(true),500);const hideTimer=setTimeout(()=>setShowHint(false),3000);return()=>{clearTimeout(timer);clearTimeout(hideTimer);};},[]);const handleStart=(clientX,clientY)=>{if(disabled)return;setIsDragging(true);startPos.current={x:clientX,y:clientY};currentPos.current={x:clientX,y:clientY};setDragOffset({x:0,y:0});};const handleMove=(clientX,clientY)=>{if(!isDragging||disabled)return;const deltaX=clientX-startPos.current.x;const deltaY=clientY-startPos.current.y;currentPos.current={x:clientX,y:clientY};setDragOffset({x:deltaX,y:deltaY});};const handleEnd=()=>{if(!isDragging||disabled)return;const deltaX=dragOffset.x;const deltaY=dragOffset.y;const absDeltaX=Math.abs(deltaX);const absDeltaY=Math.abs(deltaY);// Determine primary direction\nif(absDeltaX>absDeltaY){// Horizontal swipe\nif(absDeltaX>swipeThreshold){if(deltaX>0){onSwipeRight===null||onSwipeRight===void 0?void 0:onSwipeRight();}else{onSwipeLeft===null||onSwipeLeft===void 0?void 0:onSwipeLeft();}}}else{// Vertical swipe\nif(absDeltaY>swipeThreshold){if(deltaY>0){onSwipeDown===null||onSwipeDown===void 0?void 0:onSwipeDown();}else{onSwipeUp===null||onSwipeUp===void 0?void 0:onSwipeUp();}}}// Reset\nsetIsDragging(false);setDragOffset({x:0,y:0});};// Mouse events\nconst handleMouseDown=e=>{e.preventDefault();handleStart(e.clientX,e.clientY);};const handleMouseMove=e=>{e.preventDefault();handleMove(e.clientX,e.clientY);};const handleMouseUp=e=>{e.preventDefault();handleEnd();};// Touch events\nconst handleTouchStart=e=>{const touch=e.touches[0];handleStart(touch.clientX,touch.clientY);};const handleTouchMove=e=>{const touch=e.touches[0];handleMove(touch.clientX,touch.clientY);};const handleTouchEnd=()=>{handleEnd();};// Add global mouse event listeners when dragging\nuseEffect(()=>{if(isDragging){document.addEventListener('mousemove',handleMouseMove);document.addEventListener('mouseup',handleMouseUp);return()=>{document.removeEventListener('mousemove',handleMouseMove);document.removeEventListener('mouseup',handleMouseUp);};}},[isDragging]);const getSwipeDirection=()=>{const absDeltaX=Math.abs(dragOffset.x);const absDeltaY=Math.abs(dragOffset.y);if(absDeltaX>absDeltaY){return dragOffset.x>0?'right':'left';}else{return dragOffset.y>0?'down':'up';}};const getActionForDirection=direction=>{switch(direction){case'left':return leftAction;case'right':return rightAction;case'up':return upAction;case'down':return downAction;default:return'';}};const shouldShowAction=()=>{const absDeltaX=Math.abs(dragOffset.x);const absDeltaY=Math.abs(dragOffset.y);return(absDeltaX>50||absDeltaY>50)&&isDragging;};const getRotation=()=>{return dragOffset.x*0.1;// Slight rotation based on horizontal movement\n};const getScale=()=>{const distance=Math.sqrt(dragOffset.x*dragOffset.x+dragOffset.y*dragOffset.y);const maxDistance=200;const scaleReduction=Math.min(distance/maxDistance,0.1);return 1-scaleReduction;};return/*#__PURE__*/_jsxs(\"div\",{ref:cardRef,className:`swipeable-card ${className} ${isDragging?'dragging':''} ${showHint?'hint':''}`,style:{...style,transform:`translate(${dragOffset.x}px, ${dragOffset.y}px) rotate(${getRotation()}deg) scale(${getScale()})`,transition:isDragging?'none':'all 0.3s ease',cursor:disabled?'default':isDragging?'grabbing':'grab'},onMouseDown:handleMouseDown,onTouchStart:handleTouchStart,onTouchMove:handleTouchMove,onTouchEnd:handleTouchEnd,children:[children,shouldShowAction()&&/*#__PURE__*/_jsx(\"div\",{className:\"swipe-action-overlay\",children:/*#__PURE__*/_jsx(\"div\",{className:`swipe-action ${getSwipeDirection()}`,children:getActionForDirection(getSwipeDirection())})}),showHint&&!isDragging&&/*#__PURE__*/_jsxs(\"div\",{className:\"swipe-hints\",children:[onSwipeLeft&&/*#__PURE__*/_jsxs(\"div\",{className:\"swipe-hint left\",children:[\"\\u2190 \",leftAction]}),onSwipeRight&&/*#__PURE__*/_jsxs(\"div\",{className:\"swipe-hint right\",children:[rightAction,\" \\u2192\"]}),onSwipeUp&&/*#__PURE__*/_jsxs(\"div\",{className:\"swipe-hint up\",children:[\"\\u2191 \",upAction]}),onSwipeDown&&/*#__PURE__*/_jsxs(\"div\",{className:\"swipe-hint down\",children:[\"\\u2193 \",downAction]})]})]});}","map":{"version":3,"names":["React","useState","useRef","useEffect","jsx","_jsx","jsxs","_jsxs","SwipeableCard","_ref","children","onSwipeLeft","onSwipeRight","onSwipeUp","onSwipeDown","className","style","disabled","swipeThreshold","leftAction","rightAction","upAction","downAction","isDragging","setIsDragging","dragOffset","setDragOffset","x","y","showHint","setShowHint","cardRef","startPos","currentPos","timer","setTimeout","hideTimer","clearTimeout","handleStart","clientX","clientY","current","handleMove","deltaX","deltaY","handleEnd","absDeltaX","Math","abs","absDeltaY","handleMouseDown","e","preventDefault","handleMouseMove","handleMouseUp","handleTouchStart","touch","touches","handleTouchMove","handleTouchEnd","document","addEventListener","removeEventListener","getSwipeDirection","getActionForDirection","direction","shouldShowAction","getRotation","getScale","distance","sqrt","maxDistance","scaleReduction","min","ref","transform","transition","cursor","onMouseDown","onTouchStart","onTouchMove","onTouchEnd"],"sources":["C:/Users/super/OneDrive/Desktop/React progams/who got who/src/components/SwipeableCard.tsx"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\r\n\r\ninterface SwipeableCardProps {\r\n  children: React.ReactNode;\r\n  onSwipeLeft?: () => void;\r\n  onSwipeRight?: () => void;\r\n  onSwipeUp?: () => void;\r\n  onSwipeDown?: () => void;\r\n  className?: string;\r\n  style?: React.CSSProperties;\r\n  disabled?: boolean;\r\n  swipeThreshold?: number;\r\n  leftAction?: string;\r\n  rightAction?: string;\r\n  upAction?: string;\r\n  downAction?: string;\r\n}\r\n\r\nexport default function SwipeableCard({\r\n  children,\r\n  onSwipeLeft,\r\n  onSwipeRight,\r\n  onSwipeUp,\r\n  onSwipeDown,\r\n  className = '',\r\n  style = {},\r\n  disabled = false,\r\n  swipeThreshold = 100,\r\n  leftAction = 'Swipe Left',\r\n  rightAction = 'Swipe Right',\r\n  upAction = 'Swipe Up',\r\n  downAction = 'Swipe Down'\r\n}: SwipeableCardProps) {\r\n  const [isDragging, setIsDragging] = useState(false);\r\n  const [dragOffset, setDragOffset] = useState({ x: 0, y: 0 });\r\n  const [showHint, setShowHint] = useState(false);\r\n  const cardRef = useRef<HTMLDivElement>(null);\r\n  const startPos = useRef({ x: 0, y: 0 });\r\n  const currentPos = useRef({ x: 0, y: 0 });\r\n\r\n  useEffect(() => {\r\n    // Show hint animation on mount\r\n    const timer = setTimeout(() => setShowHint(true), 500);\r\n    const hideTimer = setTimeout(() => setShowHint(false), 3000);\r\n    return () => {\r\n      clearTimeout(timer);\r\n      clearTimeout(hideTimer);\r\n    };\r\n  }, []);\r\n\r\n  const handleStart = (clientX: number, clientY: number) => {\r\n    if (disabled) return;\r\n    \r\n    setIsDragging(true);\r\n    startPos.current = { x: clientX, y: clientY };\r\n    currentPos.current = { x: clientX, y: clientY };\r\n    setDragOffset({ x: 0, y: 0 });\r\n  };\r\n\r\n  const handleMove = (clientX: number, clientY: number) => {\r\n    if (!isDragging || disabled) return;\r\n\r\n    const deltaX = clientX - startPos.current.x;\r\n    const deltaY = clientY - startPos.current.y;\r\n    \r\n    currentPos.current = { x: clientX, y: clientY };\r\n    setDragOffset({ x: deltaX, y: deltaY });\r\n  };\r\n\r\n  const handleEnd = () => {\r\n    if (!isDragging || disabled) return;\r\n\r\n    const deltaX = dragOffset.x;\r\n    const deltaY = dragOffset.y;\r\n    const absDeltaX = Math.abs(deltaX);\r\n    const absDeltaY = Math.abs(deltaY);\r\n\r\n    // Determine primary direction\r\n    if (absDeltaX > absDeltaY) {\r\n      // Horizontal swipe\r\n      if (absDeltaX > swipeThreshold) {\r\n        if (deltaX > 0) {\r\n          onSwipeRight?.();\r\n        } else {\r\n          onSwipeLeft?.();\r\n        }\r\n      }\r\n    } else {\r\n      // Vertical swipe\r\n      if (absDeltaY > swipeThreshold) {\r\n        if (deltaY > 0) {\r\n          onSwipeDown?.();\r\n        } else {\r\n          onSwipeUp?.();\r\n        }\r\n      }\r\n    }\r\n\r\n    // Reset\r\n    setIsDragging(false);\r\n    setDragOffset({ x: 0, y: 0 });\r\n  };\r\n\r\n  // Mouse events\r\n  const handleMouseDown = (e: React.MouseEvent) => {\r\n    e.preventDefault();\r\n    handleStart(e.clientX, e.clientY);\r\n  };\r\n\r\n  const handleMouseMove = (e: MouseEvent) => {\r\n    e.preventDefault();\r\n    handleMove(e.clientX, e.clientY);\r\n  };\r\n\r\n  const handleMouseUp = (e: MouseEvent) => {\r\n    e.preventDefault();\r\n    handleEnd();\r\n  };\r\n\r\n  // Touch events\r\n  const handleTouchStart = (e: React.TouchEvent) => {\r\n    const touch = e.touches[0];\r\n    handleStart(touch.clientX, touch.clientY);\r\n  };\r\n\r\n  const handleTouchMove = (e: React.TouchEvent) => {\r\n    const touch = e.touches[0];\r\n    handleMove(touch.clientX, touch.clientY);\r\n  };\r\n\r\n  const handleTouchEnd = () => {\r\n    handleEnd();\r\n  };\r\n\r\n  // Add global mouse event listeners when dragging\r\n  useEffect(() => {\r\n    if (isDragging) {\r\n      document.addEventListener('mousemove', handleMouseMove);\r\n      document.addEventListener('mouseup', handleMouseUp);\r\n      return () => {\r\n        document.removeEventListener('mousemove', handleMouseMove);\r\n        document.removeEventListener('mouseup', handleMouseUp);\r\n      };\r\n    }\r\n  }, [isDragging]);\r\n\r\n  const getSwipeDirection = () => {\r\n    const absDeltaX = Math.abs(dragOffset.x);\r\n    const absDeltaY = Math.abs(dragOffset.y);\r\n    \r\n    if (absDeltaX > absDeltaY) {\r\n      return dragOffset.x > 0 ? 'right' : 'left';\r\n    } else {\r\n      return dragOffset.y > 0 ? 'down' : 'up';\r\n    }\r\n  };\r\n\r\n  const getActionForDirection = (direction: string) => {\r\n    switch (direction) {\r\n      case 'left': return leftAction;\r\n      case 'right': return rightAction;\r\n      case 'up': return upAction;\r\n      case 'down': return downAction;\r\n      default: return '';\r\n    }\r\n  };\r\n\r\n  const shouldShowAction = () => {\r\n    const absDeltaX = Math.abs(dragOffset.x);\r\n    const absDeltaY = Math.abs(dragOffset.y);\r\n    return (absDeltaX > 50 || absDeltaY > 50) && isDragging;\r\n  };\r\n\r\n  const getRotation = () => {\r\n    return dragOffset.x * 0.1; // Slight rotation based on horizontal movement\r\n  };\r\n\r\n  const getScale = () => {\r\n    const distance = Math.sqrt(dragOffset.x * dragOffset.x + dragOffset.y * dragOffset.y);\r\n    const maxDistance = 200;\r\n    const scaleReduction = Math.min(distance / maxDistance, 0.1);\r\n    return 1 - scaleReduction;\r\n  };\r\n\r\n  return (\r\n    <div\r\n      ref={cardRef}\r\n      className={`swipeable-card ${className} ${isDragging ? 'dragging' : ''} ${showHint ? 'hint' : ''}`}\r\n      style={{\r\n        ...style,\r\n        transform: `translate(${dragOffset.x}px, ${dragOffset.y}px) rotate(${getRotation()}deg) scale(${getScale()})`,\r\n        transition: isDragging ? 'none' : 'all 0.3s ease',\r\n        cursor: disabled ? 'default' : isDragging ? 'grabbing' : 'grab',\r\n      }}\r\n      onMouseDown={handleMouseDown}\r\n      onTouchStart={handleTouchStart}\r\n      onTouchMove={handleTouchMove}\r\n      onTouchEnd={handleTouchEnd}\r\n    >\r\n      {children}\r\n      \r\n      {/* Swipe Action Overlay */}\r\n      {shouldShowAction() && (\r\n        <div className=\"swipe-action-overlay\">\r\n          <div className={`swipe-action ${getSwipeDirection()}`}>\r\n            {getActionForDirection(getSwipeDirection())}\r\n          </div>\r\n        </div>\r\n      )}\r\n      \r\n      {/* Swipe Hints */}\r\n      {showHint && !isDragging && (\r\n        <div className=\"swipe-hints\">\r\n          {onSwipeLeft && (\r\n            <div className=\"swipe-hint left\">\r\n              ← {leftAction}\r\n            </div>\r\n          )}\r\n          {onSwipeRight && (\r\n            <div className=\"swipe-hint right\">\r\n              {rightAction} →\r\n            </div>\r\n          )}\r\n          {onSwipeUp && (\r\n            <div className=\"swipe-hint up\">\r\n              ↑ {upAction}\r\n            </div>\r\n          )}\r\n          {onSwipeDown && (\r\n            <div className=\"swipe-hint down\">\r\n              ↓ {downAction}\r\n            </div>\r\n          )}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n} "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}