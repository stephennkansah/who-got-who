{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\super\\\\OneDrive\\\\Desktop\\\\React progams\\\\who got who\\\\src\\\\components\\\\CardDeck.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport SwipeableCard from './SwipeableCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CardDeck({\n  cards,\n  maxVisible = 3,\n  className = '',\n  onCardRemoved,\n  emptyState\n}) {\n  _s();\n  const [currentIndex, setCurrentIndex] = useState(0);\n  const [animatingDirection, setAnimatingDirection] = useState(null);\n\n  // For single card view, show navigation\n  const isSingleCardView = maxVisible === 1;\n  useEffect(() => {\n    // Reset index if it's beyond available cards\n    if (currentIndex >= cards.length && cards.length > 0) {\n      setCurrentIndex(0);\n    }\n  }, [cards.length, currentIndex]);\n  const nextCard = () => {\n    if (cards.length > 1) {\n      setAnimatingDirection('left');\n      setTimeout(() => {\n        setCurrentIndex(prev => (prev + 1) % cards.length);\n        setAnimatingDirection(null);\n      }, 150);\n    }\n  };\n  const prevCard = () => {\n    if (cards.length > 1) {\n      setAnimatingDirection('right');\n      setTimeout(() => {\n        setCurrentIndex(prev => (prev - 1 + cards.length) % cards.length);\n        setAnimatingDirection(null);\n      }, 150);\n    }\n  };\n  if (cards.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `card-deck empty ${className}`,\n      children: emptyState || /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"empty-deck\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"empty-deck-icon\",\n          children: \"\\uD83C\\uDFB4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No more cards\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this);\n  }\n  const visibleCards = isSingleCardView ? [cards[currentIndex]] : cards.slice(currentIndex, currentIndex + maxVisible);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `card-deck ${className}`,\n    children: [isSingleCardView && cards.length > 1 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"deck-navigation\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"nav-btn prev\",\n        onClick: prevCard,\n        children: \"\\u2190\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"deck-dots\",\n        children: cards.map((_, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `deck-dot ${i === currentIndex ? 'active' : ''}`,\n          onClick: () => setCurrentIndex(i)\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"nav-btn next\",\n        onClick: nextCard,\n        children: \"\\u2192\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"deck-container\",\n      children: visibleCards.map((card, index) => {\n        const isTop = index === 0;\n        const zIndex = maxVisible - index;\n        const scale = isSingleCardView ? 1 : 1 - index * 0.05;\n        const yOffset = isSingleCardView ? 0 : index * 8;\n        const rotation = isSingleCardView ? 0 : (index - 1) * 2;\n        return /*#__PURE__*/_jsxDEV(SwipeableCard, {\n          className: `deck-card ${isTop ? 'top-card' : 'stacked-card'} ${animatingDirection ? `animating-${animatingDirection}` : ''}`,\n          style: {\n            zIndex,\n            transform: `translateY(${yOffset}px) scale(${scale}) rotate(${rotation}deg)`,\n            position: 'absolute',\n            top: 0,\n            left: 0,\n            right: 0\n          },\n          onSwipeLeft: isTop && isSingleCardView ? prevCard : card.onSwipeLeft,\n          onSwipeRight: isTop && isSingleCardView ? nextCard : card.onSwipeRight,\n          onSwipeUp: card.onSwipeUp,\n          onSwipeDown: card.onSwipeDown,\n          leftAction: isSingleCardView ? 'Previous' : card.leftAction,\n          rightAction: isSingleCardView ? 'Next' : card.rightAction,\n          upAction: card.upAction,\n          downAction: card.downAction,\n          disabled: !isTop,\n          children: card.content\n        }, card.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this), cards.length > 1 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"deck-counter\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"current-card\",\n        children: currentIndex + 1\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"separator\",\n        children: \" / \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"total-cards\",\n        children: cards.length\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n}\n_s(CardDeck, \"8gyRrXU23Rjkxnhbp8Ezqau8dCU=\");\n_c = CardDeck;\nvar _c;\n$RefreshReg$(_c, \"CardDeck\");","map":{"version":3,"names":["React","useState","useEffect","SwipeableCard","jsxDEV","_jsxDEV","CardDeck","cards","maxVisible","className","onCardRemoved","emptyState","_s","currentIndex","setCurrentIndex","animatingDirection","setAnimatingDirection","isSingleCardView","length","nextCard","setTimeout","prev","prevCard","children","fileName","_jsxFileName","lineNumber","columnNumber","visibleCards","slice","onClick","map","_","i","card","index","isTop","zIndex","scale","yOffset","rotation","style","transform","position","top","left","right","onSwipeLeft","onSwipeRight","onSwipeUp","onSwipeDown","leftAction","rightAction","upAction","downAction","disabled","content","id","_c","$RefreshReg$"],"sources":["C:/Users/super/OneDrive/Desktop/React progams/who got who/src/components/CardDeck.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport SwipeableCard from './SwipeableCard';\r\n\r\ninterface CardDeckProps {\r\n  cards: Array<{\r\n    id: string;\r\n    content: React.ReactNode;\r\n    leftAction?: string;\r\n    rightAction?: string;\r\n    upAction?: string;\r\n    downAction?: string;\r\n    onSwipeLeft?: () => void;\r\n    onSwipeRight?: () => void;\r\n    onSwipeUp?: () => void;\r\n    onSwipeDown?: () => void;\r\n  }>;\r\n  maxVisible?: number;\r\n  className?: string;\r\n  onCardRemoved?: (cardId: string) => void;\r\n  emptyState?: React.ReactNode;\r\n}\r\n\r\nexport default function CardDeck({\r\n  cards,\r\n  maxVisible = 3,\r\n  className = '',\r\n  onCardRemoved,\r\n  emptyState\r\n}: CardDeckProps) {\r\n  const [currentIndex, setCurrentIndex] = useState(0);\r\n  const [animatingDirection, setAnimatingDirection] = useState<'left' | 'right' | null>(null);\r\n\r\n  // For single card view, show navigation\r\n  const isSingleCardView = maxVisible === 1;\r\n  \r\n  useEffect(() => {\r\n    // Reset index if it's beyond available cards\r\n    if (currentIndex >= cards.length && cards.length > 0) {\r\n      setCurrentIndex(0);\r\n    }\r\n  }, [cards.length, currentIndex]);\r\n\r\n  const nextCard = () => {\r\n    if (cards.length > 1) {\r\n      setAnimatingDirection('left');\r\n      setTimeout(() => {\r\n        setCurrentIndex((prev) => (prev + 1) % cards.length);\r\n        setAnimatingDirection(null);\r\n      }, 150);\r\n    }\r\n  };\r\n\r\n  const prevCard = () => {\r\n    if (cards.length > 1) {\r\n      setAnimatingDirection('right');\r\n      setTimeout(() => {\r\n        setCurrentIndex((prev) => (prev - 1 + cards.length) % cards.length);\r\n        setAnimatingDirection(null);\r\n      }, 150);\r\n    }\r\n  };\r\n\r\n  if (cards.length === 0) {\r\n    return (\r\n      <div className={`card-deck empty ${className}`}>\r\n        {emptyState || (\r\n          <div className=\"empty-deck\">\r\n            <div className=\"empty-deck-icon\">🎴</div>\r\n            <p>No more cards</p>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  const visibleCards = isSingleCardView \r\n    ? [cards[currentIndex]] \r\n    : cards.slice(currentIndex, currentIndex + maxVisible);\r\n\r\n  return (\r\n    <div className={`card-deck ${className}`}>\r\n      {/* Navigation for single card view */}\r\n      {isSingleCardView && cards.length > 1 && (\r\n        <div className=\"deck-navigation\">\r\n          <button \r\n            className=\"nav-btn prev\"\r\n            onClick={prevCard}\r\n          >\r\n            ←\r\n          </button>\r\n          \r\n          <div className=\"deck-dots\">\r\n            {cards.map((_, i) => (\r\n              <div\r\n                key={i}\r\n                className={`deck-dot ${i === currentIndex ? 'active' : ''}`}\r\n                onClick={() => setCurrentIndex(i)}\r\n              />\r\n            ))}\r\n          </div>\r\n          \r\n          <button \r\n            className=\"nav-btn next\"\r\n            onClick={nextCard}\r\n          >\r\n            →\r\n          </button>\r\n        </div>\r\n      )}\r\n\r\n      {/* Card Stack */}\r\n      <div className=\"deck-container\">\r\n        {visibleCards.map((card, index) => {\r\n          const isTop = index === 0;\r\n          const zIndex = maxVisible - index;\r\n          const scale = isSingleCardView ? 1 : 1 - (index * 0.05);\r\n          const yOffset = isSingleCardView ? 0 : index * 8;\r\n          const rotation = isSingleCardView ? 0 : (index - 1) * 2;\r\n\r\n          return (\r\n            <SwipeableCard\r\n              key={card.id}\r\n              className={`deck-card ${isTop ? 'top-card' : 'stacked-card'} ${animatingDirection ? `animating-${animatingDirection}` : ''}`}\r\n              style={{\r\n                zIndex,\r\n                transform: `translateY(${yOffset}px) scale(${scale}) rotate(${rotation}deg)`,\r\n                position: 'absolute',\r\n                top: 0,\r\n                left: 0,\r\n                right: 0,\r\n              }}\r\n              onSwipeLeft={isTop && isSingleCardView ? prevCard : card.onSwipeLeft}\r\n              onSwipeRight={isTop && isSingleCardView ? nextCard : card.onSwipeRight}\r\n              onSwipeUp={card.onSwipeUp}\r\n              onSwipeDown={card.onSwipeDown}\r\n              leftAction={isSingleCardView ? 'Previous' : card.leftAction}\r\n              rightAction={isSingleCardView ? 'Next' : card.rightAction}\r\n              upAction={card.upAction}\r\n              downAction={card.downAction}\r\n              disabled={!isTop}\r\n            >\r\n              {card.content}\r\n            </SwipeableCard>\r\n          );\r\n        })}\r\n      </div>\r\n\r\n      {/* Card Counter */}\r\n      {cards.length > 1 && (\r\n        <div className=\"deck-counter\">\r\n          <span className=\"current-card\">{currentIndex + 1}</span>\r\n          <span className=\"separator\"> / </span>\r\n          <span className=\"total-cards\">{cards.length}</span>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n} "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}