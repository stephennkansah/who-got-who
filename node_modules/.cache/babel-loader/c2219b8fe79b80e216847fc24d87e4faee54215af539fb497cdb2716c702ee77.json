{"ast":null,"code":"import React,{useState,useEffect}from'react';import{useParams,useNavigate}from'react-router-dom';import{useGame}from'../context/GameContext';import CardDeck from'./CardDeck';import TargetSelectModal from'./TargetSelectModal';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";export default function Game(){const{gameId}=useParams();const navigate=useNavigate();const{state,claimGotcha,disputeGotcha,acceptGotcha,forceGameState,simulateScore,updatePlayerTasks}=useGame();const[showLeaderboard,setShowLeaderboard]=useState(false);const[showTestingTools,setShowTestingTools]=useState(false);const[cardViewMode,setCardViewMode]=useState('deck');const[showTargetModal,setShowTargetModal]=useState(false);const[selectedTask,setSelectedTask]=useState(null);const[currentCardIndex,setCurrentCardIndex]=useState(0);const currentGame=state.currentGame;const currentPlayer=state.currentPlayer;useEffect(()=>{if(!currentGame||!currentPlayer){navigate('/');return;}if(currentGame.status==='draft'){navigate(`/lobby/${gameId}`);}else if(currentGame.status==='ended'){navigate(`/recap/${gameId}`);}},[currentGame,currentPlayer,navigate,gameId]);if(!currentGame||!currentPlayer){return/*#__PURE__*/_jsx(\"div\",{className:\"container\",children:/*#__PURE__*/_jsx(\"div\",{className:\"card\",children:/*#__PURE__*/_jsx(\"p\",{children:\"\\u23F3 Loading game...\"})})});}const getCurrentScore=()=>{return currentPlayer.score||0;};const getPendingTasks=()=>{return currentPlayer.tasks.filter(task=>task.status==='pending');};const getCompletedTasks=()=>{return currentPlayer.tasks.filter(task=>task.status==='completed');};const getFailedTasks=()=>{return currentPlayer.tasks.filter(task=>task.status==='failed');};const getAvailableTargets=()=>{return currentGame.players.filter(p=>p.id!==currentPlayer.id);};// Handle manual task completion (pass/fail)\nconst handleTaskResult=async(taskId,result)=>{if(!currentPlayer)return;const task=currentPlayer.tasks.find(t=>t.id===taskId);if(!task||task.status!=='pending')return;if(result==='completed'){// For completed tasks, open target selection modal\nsetSelectedTask(task);setShowTargetModal(true);}else{// For failed tasks, use existing claimGotcha with special \"failed\" target\nawait claimGotcha(taskId,'failed');}};// Update existing handleTargetSelect to work with new flow\nconst handleTargetSelect=async targetId=>{if(!selectedTask||!currentPlayer)return;// Use existing claimGotcha function\nawait claimGotcha(selectedTask.id,targetId);// Award points manually for now\nsimulateScore===null||simulateScore===void 0?void 0:simulateScore(1);setShowTargetModal(false);setSelectedTask(null);};const handleSwapTask=taskId=>{console.log('Swap task:',taskId);};// Remove the old handleGotchaClick function and update createTaskCards\nconst createTaskCards=()=>{return getPendingTasks().map(task=>({id:task.id,onSwipeLeft:cardViewMode==='deck'?()=>{const currentIndex=getPendingTasks().findIndex(t=>t.id===task.id);const nextIndex=(currentIndex+1)%getPendingTasks().length;setCurrentCardIndex(nextIndex);}:undefined,onSwipeRight:cardViewMode==='deck'?()=>{const currentIndex=getPendingTasks().findIndex(t=>t.id===task.id);const prevIndex=currentIndex===0?getPendingTasks().length-1:currentIndex-1;setCurrentCardIndex(prevIndex);}:undefined,content:/*#__PURE__*/_jsxs(\"div\",{className:\"task-card-content\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"task-header\",children:/*#__PURE__*/_jsx(\"h3\",{children:\"Task\"})}),/*#__PURE__*/_jsx(\"div\",{className:\"task-text\",children:/*#__PURE__*/_jsx(\"p\",{children:task.text})}),task.tips&&/*#__PURE__*/_jsx(\"div\",{className:\"task-footer\",children:/*#__PURE__*/_jsx(\"div\",{className:\"task-tips\",children:/*#__PURE__*/_jsxs(\"p\",{children:[\"\\uD83D\\uDCA1 \",task.tips]})})}),/*#__PURE__*/_jsxs(\"div\",{style:{display:'flex',gap:'0.5rem',marginTop:'1rem'},children:[/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-success btn-small\",onClick:()=>handleTaskResult(task.id,'completed'),style:{flex:1,fontSize:'0.8rem',background:'linear-gradient(135deg, #4CAF50, #66BB6A)'},children:\"\\u2705 PASS\"}),/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-danger btn-small\",onClick:()=>handleTaskResult(task.id,'failed'),style:{flex:1,fontSize:'0.8rem',background:'linear-gradient(135deg, #F44336, #EF5350)'},children:\"\\u274C FAIL\"})]})]})}));};const taskCards=createTaskCards();const endGame=()=>{if(currentGame.status==='live'){forceGameState===null||forceGameState===void 0?void 0:forceGameState('ended');}};return/*#__PURE__*/_jsxs(\"div\",{className:\"container\",children:[/*#__PURE__*/_jsxs(\"div\",{style:{textAlign:'center',marginBottom:'1.5rem',padding:'1rem 0'},children:[/*#__PURE__*/_jsx(\"h1\",{style:{fontSize:'2rem',marginBottom:'0.5rem',color:'white',textShadow:'0 2px 4px rgba(0, 0, 0, 0.3)',fontWeight:'900',textTransform:'uppercase'},children:\"WHO GOT WHO\"}),/*#__PURE__*/_jsxs(\"div\",{style:{display:'flex',alignItems:'center',justifyContent:'center',gap:'1rem',flexWrap:'wrap'},children:[/*#__PURE__*/_jsxs(\"div\",{style:{background:'rgba(255, 255, 255, 0.2)',backdropFilter:'blur(10px)',padding:'0.5rem 1rem',borderRadius:'20px',color:'white',fontWeight:'700',fontSize:'0.9rem',textTransform:'uppercase',letterSpacing:'0.5px'},children:[\"\\uD83C\\uDFC6 \",(currentPlayer===null||currentPlayer===void 0?void 0:currentPlayer.score)||0,\" Points\"]}),/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-small\",onClick:()=>setCardViewMode(cardViewMode==='deck'?'list':'deck'),style:{background:'rgba(255, 255, 255, 0.25)',color:'white',border:'2px solid rgba(255, 255, 255, 0.3)',minHeight:'36px',fontSize:'0.8rem'},children:cardViewMode==='deck'?'📝':'🎴'})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"card\",style:{background:'linear-gradient(135deg, #E8F5E8, #C8E6C9)',border:'2px solid rgba(76, 175, 80, 0.3)',color:'#2E7D32',marginBottom:'1rem'},children:/*#__PURE__*/_jsxs(\"div\",{className:\"flex flex-between\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h3\",{style:{fontSize:'1.2rem',marginBottom:'0.5rem',textTransform:'uppercase',fontWeight:'800'},children:\"\\uD83C\\uDFAE Live Game\"}),/*#__PURE__*/_jsxs(\"div\",{style:{fontWeight:'600'},children:[/*#__PURE__*/_jsxs(\"div\",{children:[\"\\uD83C\\uDFAF \",/*#__PURE__*/_jsx(\"strong\",{children:\"Target:\"}),\" 4 Gotchas to win\"]}),/*#__PURE__*/_jsxs(\"div\",{children:[\"\\uD83D\\uDC65 \",/*#__PURE__*/_jsx(\"strong\",{children:\"Players:\"}),\" \",currentGame.players.length]})]})]}),/*#__PURE__*/_jsxs(\"div\",{style:{background:'rgba(46, 125, 50, 0.1)',padding:'1rem',borderRadius:'15px',textAlign:'center',minWidth:'80px'},children:[/*#__PURE__*/_jsx(\"div\",{style:{fontSize:'1.5rem',fontWeight:'800'},children:getPendingTasks().length}),/*#__PURE__*/_jsx(\"div\",{style:{fontSize:'0.7rem',textTransform:'uppercase',fontWeight:'700'},children:\"Tasks Left\"})]})]})}),/*#__PURE__*/_jsxs(\"div\",{className:\"card\",children:[/*#__PURE__*/_jsx(\"h3\",{style:{fontSize:'1.2rem',marginBottom:'1rem',textTransform:'uppercase',fontWeight:'800',color:'#4A90E2'},children:\"\\uD83C\\uDFC6 Leaderboard\"}),/*#__PURE__*/_jsx(\"div\",{children:currentGame.players.sort((a,b)=>b.score-a.score).map((player,index)=>/*#__PURE__*/_jsxs(\"div\",{style:{display:'flex',justifyContent:'space-between',alignItems:'center',padding:'1rem',marginBottom:'0.5rem',background:index===0?'linear-gradient(135deg, #FFD700, #FFC107)':player.id===(currentPlayer===null||currentPlayer===void 0?void 0:currentPlayer.id)?'linear-gradient(135deg, #E3F2FD, #BBDEFB)':'linear-gradient(135deg, #F5F5F5, #EEEEEE)',border:index===0?'2px solid rgba(255, 193, 7, 0.5)':player.id===(currentPlayer===null||currentPlayer===void 0?void 0:currentPlayer.id)?'2px solid rgba(33, 150, 243, 0.3)':'2px solid rgba(0, 0, 0, 0.1)',borderRadius:'15px',color:index===0?'#333333':player.id===(currentPlayer===null||currentPlayer===void 0?void 0:currentPlayer.id)?'#1976D2':'#333333',fontWeight:'600',transition:'all 0.3s ease'},children:[/*#__PURE__*/_jsxs(\"div\",{style:{display:'flex',alignItems:'center',gap:'0.5rem'},children:[/*#__PURE__*/_jsx(\"span\",{style:{fontSize:'1.2rem',fontWeight:'800',minWidth:'24px'},children:index===0?'🥇':index===1?'🥈':index===2?'🥉':`${index+1}.`}),/*#__PURE__*/_jsx(\"span\",{style:{fontWeight:'700',fontSize:player.id===(currentPlayer===null||currentPlayer===void 0?void 0:currentPlayer.id)?'1.1rem':'1rem'},children:player.name}),player.isHost&&/*#__PURE__*/_jsx(\"span\",{style:{fontSize:'0.8rem'},children:\"\\uD83D\\uDC51\"}),player.id===(currentPlayer===null||currentPlayer===void 0?void 0:currentPlayer.id)&&/*#__PURE__*/_jsx(\"span\",{style:{background:'rgba(0, 0, 0, 0.1)',padding:'0.25rem 0.5rem',borderRadius:'10px',fontSize:'0.7rem',fontWeight:'700',textTransform:'uppercase'},children:\"YOU\"})]}),/*#__PURE__*/_jsx(\"div\",{style:{fontSize:'1.2rem',fontWeight:'800',background:'rgba(0, 0, 0, 0.1)',padding:'0.5rem 1rem',borderRadius:'20px',minWidth:'60px',textAlign:'center'},children:player.score})]},player.id))})]}),currentPlayer&&getPendingTasks().length>0&&/*#__PURE__*/_jsxs(\"div\",{className:\"card\",children:[/*#__PURE__*/_jsxs(\"div\",{style:{display:'flex',justifyContent:'space-between',alignItems:'center',marginBottom:'1rem'},children:[/*#__PURE__*/_jsx(\"h3\",{style:{fontSize:'1.2rem',margin:0,textTransform:'uppercase',fontWeight:'800',color:'#4A90E2'},children:\"\\uD83C\\uDFAF Your Tasks\"}),/*#__PURE__*/_jsxs(\"div\",{style:{background:'linear-gradient(135deg, #FF9800, #FFB74D)',color:'white',padding:'0.5rem 1rem',borderRadius:'20px',fontSize:'0.8rem',fontWeight:'800',textTransform:'uppercase',letterSpacing:'0.5px'},children:[getPendingTasks().length,\" Left\"]})]}),cardViewMode==='deck'?/*#__PURE__*/_jsx(CardDeck,{cards:createTaskCards(),maxVisible:1,emptyState:/*#__PURE__*/_jsxs(\"div\",{className:\"empty-deck\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"empty-deck-icon\",children:\"\\uD83C\\uDF89\"}),/*#__PURE__*/_jsx(\"p\",{style:{fontWeight:'600'},children:\"All tasks completed!\"})]})}):/*#__PURE__*/_jsx(\"div\",{children:getPendingTasks().map(task=>/*#__PURE__*/_jsxs(\"div\",{className:\"task-item\",children:[/*#__PURE__*/_jsx(\"div\",{style:{display:'flex',justifyContent:'space-between',alignItems:'flex-start',marginBottom:'1rem'},children:/*#__PURE__*/_jsxs(\"div\",{style:{flex:1},children:[/*#__PURE__*/_jsx(\"p\",{style:{margin:0,marginBottom:'0.5rem',fontWeight:'600',fontSize:'1rem'},children:task.text}),task.tips&&/*#__PURE__*/_jsxs(\"div\",{style:{fontSize:'0.8rem',color:'#666',fontWeight:'600',fontStyle:'italic',marginBottom:'0.5rem'},children:[\"\\uD83D\\uDCA1 \",task.tips]})]})}),/*#__PURE__*/_jsxs(\"div\",{style:{display:'flex',gap:'0.5rem',marginTop:'1rem'},children:[/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-success btn-small\",onClick:()=>handleTaskResult(task.id,'completed'),style:{flex:1,fontSize:'0.8rem',background:'linear-gradient(135deg, #4CAF50, #66BB6A)'},children:\"\\u2705 PASS\"}),/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-danger btn-small\",onClick:()=>handleTaskResult(task.id,'failed'),style:{flex:1,fontSize:'0.8rem',background:'linear-gradient(135deg, #F44336, #EF5350)'},children:\"\\u274C FAIL\"})]})]},task.id))})]}),currentPlayer&&getCompletedTasks().length>0&&/*#__PURE__*/_jsxs(\"div\",{className:\"card card-success\",children:[/*#__PURE__*/_jsxs(\"h3\",{style:{fontSize:'1.2rem',marginBottom:'1rem',textTransform:'uppercase',fontWeight:'800'},children:[\"\\u2705 Completed Tasks (\",getCompletedTasks().length,\")\"]}),getCompletedTasks().slice(0,3).map(task=>{var _currentGame$players$;return/*#__PURE__*/_jsx(\"div\",{className:\"task-item completed\",children:/*#__PURE__*/_jsxs(\"div\",{style:{fontWeight:'600'},children:[/*#__PURE__*/_jsx(\"div\",{style:{marginBottom:'0.5rem'},children:task.text}),/*#__PURE__*/_jsxs(\"div\",{style:{fontSize:'0.8rem',color:'#2E7D32',fontWeight:'700'},children:[\"\\u2705 Got \",((_currentGame$players$=currentGame.players.find(p=>p.id===task.targetId))===null||_currentGame$players$===void 0?void 0:_currentGame$players$.name)||'someone',\"!\"]})]})},task.id);}),getCompletedTasks().length>3&&/*#__PURE__*/_jsxs(\"div\",{style:{textAlign:'center',padding:'1rem',color:'#2E7D32',fontWeight:'700'},children:[\"... and \",getCompletedTasks().length-3,\" more! \\uD83C\\uDF89\"]})]}),currentPlayer&&getFailedTasks().length>0&&/*#__PURE__*/_jsxs(\"div\",{className:\"card card-warning\",children:[/*#__PURE__*/_jsxs(\"h3\",{style:{fontSize:'1.2rem',marginBottom:'1rem',textTransform:'uppercase',fontWeight:'800'},children:[\"\\u274C Failed Tasks (\",getFailedTasks().length,\")\"]}),getFailedTasks().slice(0,2).map(task=>/*#__PURE__*/_jsx(\"div\",{className:\"task-item failed\",children:/*#__PURE__*/_jsxs(\"div\",{style:{fontWeight:'600'},children:[/*#__PURE__*/_jsx(\"div\",{style:{marginBottom:'0.5rem'},children:task.text}),/*#__PURE__*/_jsx(\"div\",{style:{fontSize:'0.8rem',color:'#C62828',fontWeight:'700'},children:\"\\u274C Caught or disputed\"})]})},task.id)),getFailedTasks().length>2&&/*#__PURE__*/_jsxs(\"div\",{style:{textAlign:'center',padding:'1rem',color:'#C62828',fontWeight:'700'},children:[\"... and \",getFailedTasks().length-2,\" more\"]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"card card-test\",children:[/*#__PURE__*/_jsxs(\"div\",{style:{display:'flex',justifyContent:'space-between',alignItems:'center',marginBottom:'1rem'},children:[/*#__PURE__*/_jsx(\"h3\",{style:{fontSize:'1rem',margin:0,textTransform:'uppercase',fontWeight:'800'},children:\"\\uD83D\\uDD27 Demo Tools\"}),/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-small\",onClick:()=>setShowTestingTools(!showTestingTools),style:{background:'rgba(123, 31, 162, 0.2)',color:'#7B1FA2',border:'2px solid rgba(123, 31, 162, 0.3)',minHeight:'32px',fontSize:'0.7rem'},children:showTestingTools?'▼':'▶'})]}),showTestingTools&&/*#__PURE__*/_jsxs(\"div\",{style:{display:'flex',gap:'0.5rem',flexWrap:'wrap'},children:[/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-secondary btn-small\",onClick:()=>simulateScore===null||simulateScore===void 0?void 0:simulateScore(1),style:{fontSize:'0.7rem'},children:\"+1 Point\"}),/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-danger btn-small\",onClick:()=>simulateScore===null||simulateScore===void 0?void 0:simulateScore(-1),style:{fontSize:'0.7rem'},children:\"-1 Point\"}),/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-secondary btn-small\",onClick:endGame,style:{fontSize:'0.7rem'},children:\"\\uD83C\\uDFC1 End Game\"})]})]}),/*#__PURE__*/_jsx(TargetSelectModal,{isOpen:showTargetModal,onClose:()=>{setShowTargetModal(false);setSelectedTask(null);},onSelectTarget:handleTargetSelect,availableTargets:getAvailableTargets(),taskText:(selectedTask===null||selectedTask===void 0?void 0:selectedTask.text)||''})]});}","map":{"version":3,"names":["React","useState","useEffect","useParams","useNavigate","useGame","CardDeck","TargetSelectModal","jsx","_jsx","jsxs","_jsxs","Game","gameId","navigate","state","claimGotcha","disputeGotcha","acceptGotcha","forceGameState","simulateScore","updatePlayerTasks","showLeaderboard","setShowLeaderboard","showTestingTools","setShowTestingTools","cardViewMode","setCardViewMode","showTargetModal","setShowTargetModal","selectedTask","setSelectedTask","currentCardIndex","setCurrentCardIndex","currentGame","currentPlayer","status","className","children","getCurrentScore","score","getPendingTasks","tasks","filter","task","getCompletedTasks","getFailedTasks","getAvailableTargets","players","p","id","handleTaskResult","taskId","result","find","t","handleTargetSelect","targetId","handleSwapTask","console","log","createTaskCards","map","onSwipeLeft","currentIndex","findIndex","nextIndex","length","undefined","onSwipeRight","prevIndex","content","text","tips","style","display","gap","marginTop","onClick","flex","fontSize","background","taskCards","endGame","textAlign","marginBottom","padding","color","textShadow","fontWeight","textTransform","alignItems","justifyContent","flexWrap","backdropFilter","borderRadius","letterSpacing","border","minHeight","minWidth","sort","a","b","player","index","transition","name","isHost","margin","cards","maxVisible","emptyState","fontStyle","slice","_currentGame$players$","isOpen","onClose","onSelectTarget","availableTargets","taskText"],"sources":["C:/Users/super/OneDrive/Desktop/React progams/who got who/src/components/Game.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useParams, useNavigate } from 'react-router-dom';\r\nimport { useGame } from '../context/GameContext';\r\nimport { TaskInstance, Player } from '../types';\r\nimport CardDeck from './CardDeck';\r\nimport TargetSelectModal from './TargetSelectModal';\r\n\r\nexport default function Game() {\r\n  const { gameId } = useParams<{ gameId: string }>();\r\n  const navigate = useNavigate();\r\n  const { state, claimGotcha, disputeGotcha, acceptGotcha, forceGameState, simulateScore, updatePlayerTasks } = useGame();\r\n\r\n  const [showLeaderboard, setShowLeaderboard] = useState(false);\r\n  const [showTestingTools, setShowTestingTools] = useState(false);\r\n  const [cardViewMode, setCardViewMode] = useState<'deck' | 'list'>('deck');\r\n  const [showTargetModal, setShowTargetModal] = useState(false);\r\n  const [selectedTask, setSelectedTask] = useState<TaskInstance | null>(null);\r\n  const [currentCardIndex, setCurrentCardIndex] = useState(0);\r\n\r\n  const currentGame = state.currentGame;\r\n  const currentPlayer = state.currentPlayer;\r\n\r\n  useEffect(() => {\r\n    if (!currentGame || !currentPlayer) {\r\n      navigate('/');\r\n      return;\r\n    }\r\n\r\n    if (currentGame.status === 'draft') {\r\n      navigate(`/lobby/${gameId}`);\r\n    } else if (currentGame.status === 'ended') {\r\n      navigate(`/recap/${gameId}`);\r\n    }\r\n  }, [currentGame, currentPlayer, navigate, gameId]);\r\n\r\n  if (!currentGame || !currentPlayer) {\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"card\">\r\n          <p>⏳ Loading game...</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  const getCurrentScore = () => {\r\n    return currentPlayer.score || 0;\r\n  };\r\n\r\n  const getPendingTasks = () => {\r\n    return currentPlayer.tasks.filter((task: TaskInstance) => task.status === 'pending');\r\n  };\r\n\r\n  const getCompletedTasks = () => {\r\n    return currentPlayer.tasks.filter((task: TaskInstance) => task.status === 'completed');\r\n  };\r\n\r\n  const getFailedTasks = () => {\r\n    return currentPlayer.tasks.filter((task: TaskInstance) => task.status === 'failed');\r\n  };\r\n\r\n  const getAvailableTargets = (): Player[] => {\r\n    return currentGame.players.filter(p => p.id !== currentPlayer.id);\r\n  };\r\n\r\n  // Handle manual task completion (pass/fail)\r\n  const handleTaskResult = async (taskId: string, result: 'completed' | 'failed') => {\r\n    if (!currentPlayer) return;\r\n    \r\n    const task = currentPlayer.tasks.find(t => t.id === taskId);\r\n    if (!task || task.status !== 'pending') return;\r\n\r\n    if (result === 'completed') {\r\n      // For completed tasks, open target selection modal\r\n      setSelectedTask(task);\r\n      setShowTargetModal(true);\r\n    } else {\r\n      // For failed tasks, use existing claimGotcha with special \"failed\" target\r\n      await claimGotcha(taskId, 'failed');\r\n    }\r\n  };\r\n\r\n  // Update existing handleTargetSelect to work with new flow\r\n  const handleTargetSelect = async (targetId: string) => {\r\n    if (!selectedTask || !currentPlayer) return;\r\n\r\n    // Use existing claimGotcha function\r\n    await claimGotcha(selectedTask.id, targetId);\r\n    \r\n    // Award points manually for now\r\n    simulateScore?.(1);\r\n    \r\n    setShowTargetModal(false);\r\n    setSelectedTask(null);\r\n  };\r\n\r\n  const handleSwapTask = (taskId: string) => {\r\n    console.log('Swap task:', taskId);\r\n  };\r\n\r\n  // Remove the old handleGotchaClick function and update createTaskCards\r\n  const createTaskCards = () => {\r\n    return getPendingTasks().map(task => ({\r\n      id: task.id,\r\n      onSwipeLeft: cardViewMode === 'deck' ? () => {\r\n        const currentIndex = getPendingTasks().findIndex(t => t.id === task.id);\r\n        const nextIndex = (currentIndex + 1) % getPendingTasks().length;\r\n        setCurrentCardIndex(nextIndex);\r\n      } : undefined,\r\n      onSwipeRight: cardViewMode === 'deck' ? () => {\r\n        const currentIndex = getPendingTasks().findIndex(t => t.id === task.id);\r\n        const prevIndex = currentIndex === 0 ? getPendingTasks().length - 1 : currentIndex - 1;\r\n        setCurrentCardIndex(prevIndex);\r\n      } : undefined,\r\n      content: (\r\n        <div className=\"task-card-content\">\r\n          <div className=\"task-header\">\r\n            <h3>Task</h3>\r\n          </div>\r\n          <div className=\"task-text\">\r\n            <p>{task.text}</p>\r\n          </div>\r\n          {task.tips && (\r\n            <div className=\"task-footer\">\r\n              <div className=\"task-tips\">\r\n                <p>💡 {task.tips}</p>\r\n              </div>\r\n            </div>\r\n          )}\r\n          \r\n          {/* Pass/Fail Controls for Cards */}\r\n          <div style={{ \r\n            display: 'flex', \r\n            gap: '0.5rem',\r\n            marginTop: '1rem'\r\n          }}>\r\n            <button\r\n              className=\"btn btn-success btn-small\"\r\n              onClick={() => handleTaskResult(task.id, 'completed')}\r\n              style={{ \r\n                flex: 1,\r\n                fontSize: '0.8rem',\r\n                background: 'linear-gradient(135deg, #4CAF50, #66BB6A)'\r\n              }}\r\n            >\r\n              ✅ PASS\r\n            </button>\r\n            <button\r\n              className=\"btn btn-danger btn-small\"\r\n              onClick={() => handleTaskResult(task.id, 'failed')}\r\n              style={{ \r\n                flex: 1,\r\n                fontSize: '0.8rem',\r\n                background: 'linear-gradient(135deg, #F44336, #EF5350)'\r\n              }}\r\n            >\r\n              ❌ FAIL\r\n            </button>\r\n          </div>\r\n        </div>\r\n      )\r\n    }));\r\n  };\r\n\r\n  const taskCards = createTaskCards();\r\n\r\n  const endGame = () => {\r\n    if (currentGame.status === 'live') {\r\n      forceGameState?.('ended');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      {/* Compact Header */}\r\n      <div style={{ \r\n        textAlign: 'center', \r\n        marginBottom: '1.5rem',\r\n        padding: '1rem 0'\r\n      }}>\r\n        <h1 style={{ \r\n          fontSize: '2rem', \r\n          marginBottom: '0.5rem',\r\n          color: 'white',\r\n          textShadow: '0 2px 4px rgba(0, 0, 0, 0.3)',\r\n          fontWeight: '900',\r\n          textTransform: 'uppercase'\r\n        }}>\r\n          WHO GOT WHO\r\n        </h1>\r\n        <div style={{ \r\n          display: 'flex', \r\n          alignItems: 'center', \r\n          justifyContent: 'center', \r\n          gap: '1rem',\r\n          flexWrap: 'wrap'\r\n        }}>\r\n          <div style={{ \r\n            background: 'rgba(255, 255, 255, 0.2)',\r\n            backdropFilter: 'blur(10px)',\r\n            padding: '0.5rem 1rem',\r\n            borderRadius: '20px',\r\n            color: 'white',\r\n            fontWeight: '700',\r\n            fontSize: '0.9rem',\r\n            textTransform: 'uppercase',\r\n            letterSpacing: '0.5px'\r\n          }}>\r\n            🏆 {currentPlayer?.score || 0} Points\r\n          </div>\r\n          <button\r\n            className=\"btn btn-small\"\r\n            onClick={() => setCardViewMode(cardViewMode === 'deck' ? 'list' : 'deck')}\r\n            style={{ \r\n              background: 'rgba(255, 255, 255, 0.25)',\r\n              color: 'white',\r\n              border: '2px solid rgba(255, 255, 255, 0.3)',\r\n              minHeight: '36px',\r\n              fontSize: '0.8rem'\r\n            }}\r\n          >\r\n            {cardViewMode === 'deck' ? '📝' : '🎴'}\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Game Status */}\r\n      <div className=\"card\" style={{ \r\n        background: 'linear-gradient(135deg, #E8F5E8, #C8E6C9)',\r\n        border: '2px solid rgba(76, 175, 80, 0.3)',\r\n        color: '#2E7D32',\r\n        marginBottom: '1rem'\r\n      }}>\r\n        <div className=\"flex flex-between\">\r\n          <div>\r\n            <h3 style={{ \r\n              fontSize: '1.2rem', \r\n              marginBottom: '0.5rem',\r\n              textTransform: 'uppercase',\r\n              fontWeight: '800'\r\n            }}>\r\n              🎮 Live Game\r\n            </h3>\r\n            <div style={{ fontWeight: '600' }}>\r\n              <div>🎯 <strong>Target:</strong> 4 Gotchas to win</div>\r\n              <div>👥 <strong>Players:</strong> {currentGame.players.length}</div>\r\n            </div>\r\n          </div>\r\n          <div style={{ \r\n            background: 'rgba(46, 125, 50, 0.1)',\r\n            padding: '1rem',\r\n            borderRadius: '15px',\r\n            textAlign: 'center',\r\n            minWidth: '80px'\r\n          }}>\r\n            <div style={{ fontSize: '1.5rem', fontWeight: '800' }}>\r\n              {getPendingTasks().length}\r\n            </div>\r\n            <div style={{ fontSize: '0.7rem', textTransform: 'uppercase', fontWeight: '700' }}>\r\n              Tasks Left\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Leaderboard */}\r\n      <div className=\"card\">\r\n        <h3 style={{ \r\n          fontSize: '1.2rem', \r\n          marginBottom: '1rem',\r\n          textTransform: 'uppercase',\r\n          fontWeight: '800',\r\n          color: '#4A90E2'\r\n        }}>\r\n          🏆 Leaderboard\r\n        </h3>\r\n        <div>\r\n          {currentGame.players\r\n            .sort((a, b) => b.score - a.score)\r\n            .map((player, index) => (\r\n              <div \r\n                key={player.id}\r\n                style={{ \r\n                  display: 'flex', \r\n                  justifyContent: 'space-between', \r\n                  alignItems: 'center',\r\n                  padding: '1rem',\r\n                  marginBottom: '0.5rem',\r\n                  background: index === 0 \r\n                    ? 'linear-gradient(135deg, #FFD700, #FFC107)' \r\n                    : player.id === currentPlayer?.id\r\n                    ? 'linear-gradient(135deg, #E3F2FD, #BBDEFB)'\r\n                    : 'linear-gradient(135deg, #F5F5F5, #EEEEEE)',\r\n                  border: index === 0 \r\n                    ? '2px solid rgba(255, 193, 7, 0.5)' \r\n                    : player.id === currentPlayer?.id\r\n                    ? '2px solid rgba(33, 150, 243, 0.3)'\r\n                    : '2px solid rgba(0, 0, 0, 0.1)',\r\n                  borderRadius: '15px',\r\n                  color: index === 0 ? '#333333' : player.id === currentPlayer?.id ? '#1976D2' : '#333333',\r\n                  fontWeight: '600',\r\n                  transition: 'all 0.3s ease'\r\n                }}\r\n              >\r\n                <div style={{ display: 'flex', alignItems: 'center', gap: '0.5rem' }}>\r\n                  <span style={{ \r\n                    fontSize: '1.2rem',\r\n                    fontWeight: '800',\r\n                    minWidth: '24px'\r\n                  }}>\r\n                    {index === 0 ? '🥇' : index === 1 ? '🥈' : index === 2 ? '🥉' : `${index + 1}.`}\r\n                  </span>\r\n                  <span style={{ \r\n                    fontWeight: '700',\r\n                    fontSize: player.id === currentPlayer?.id ? '1.1rem' : '1rem'\r\n                  }}>\r\n                    {player.name}\r\n                  </span>\r\n                  {player.isHost && <span style={{ fontSize: '0.8rem' }}>👑</span>}\r\n                  {player.id === currentPlayer?.id && (\r\n                    <span style={{ \r\n                      background: 'rgba(0, 0, 0, 0.1)',\r\n                      padding: '0.25rem 0.5rem',\r\n                      borderRadius: '10px',\r\n                      fontSize: '0.7rem',\r\n                      fontWeight: '700',\r\n                      textTransform: 'uppercase'\r\n                    }}>\r\n                      YOU\r\n                    </span>\r\n                  )}\r\n                </div>\r\n                <div style={{ \r\n                  fontSize: '1.2rem',\r\n                  fontWeight: '800',\r\n                  background: 'rgba(0, 0, 0, 0.1)',\r\n                  padding: '0.5rem 1rem',\r\n                  borderRadius: '20px',\r\n                  minWidth: '60px',\r\n                  textAlign: 'center'\r\n                }}>\r\n                  {player.score}\r\n                </div>\r\n              </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n\r\n      {/* Pending Tasks */}\r\n      {currentPlayer && getPendingTasks().length > 0 && (\r\n        <div className=\"card\">\r\n          <div style={{ \r\n            display: 'flex', \r\n            justifyContent: 'space-between', \r\n            alignItems: 'center',\r\n            marginBottom: '1rem'\r\n          }}>\r\n            <h3 style={{ \r\n              fontSize: '1.2rem', \r\n              margin: 0,\r\n              textTransform: 'uppercase',\r\n              fontWeight: '800',\r\n              color: '#4A90E2'\r\n            }}>\r\n              🎯 Your Tasks\r\n            </h3>\r\n            <div style={{\r\n              background: 'linear-gradient(135deg, #FF9800, #FFB74D)',\r\n              color: 'white',\r\n              padding: '0.5rem 1rem',\r\n              borderRadius: '20px',\r\n              fontSize: '0.8rem',\r\n              fontWeight: '800',\r\n              textTransform: 'uppercase',\r\n              letterSpacing: '0.5px'\r\n            }}>\r\n              {getPendingTasks().length} Left\r\n            </div>\r\n          </div>\r\n\r\n          {cardViewMode === 'deck' ? (\r\n            <CardDeck\r\n              cards={createTaskCards()}\r\n              maxVisible={1}\r\n              emptyState={\r\n                <div className=\"empty-deck\">\r\n                  <div className=\"empty-deck-icon\">🎉</div>\r\n                  <p style={{ fontWeight: '600' }}>All tasks completed!</p>\r\n                </div>\r\n              }\r\n            />\r\n          ) : (\r\n            <div>\r\n              {getPendingTasks().map(task => (\r\n                <div key={task.id} className=\"task-item\">\r\n                  <div style={{ \r\n                    display: 'flex', \r\n                    justifyContent: 'space-between', \r\n                    alignItems: 'flex-start',\r\n                    marginBottom: '1rem'\r\n                  }}>\r\n                    <div style={{ flex: 1 }}>\r\n                      <p style={{ \r\n                        margin: 0, \r\n                        marginBottom: '0.5rem',\r\n                        fontWeight: '600',\r\n                        fontSize: '1rem'\r\n                      }}>\r\n                        {task.text}\r\n                      </p>\r\n                      {task.tips && (\r\n                        <div style={{ \r\n                          fontSize: '0.8rem',\r\n                          color: '#666',\r\n                          fontWeight: '600',\r\n                          fontStyle: 'italic',\r\n                          marginBottom: '0.5rem'\r\n                        }}>\r\n                          💡 {task.tips}\r\n                        </div>\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                  \r\n                  {/* Pass/Fail Controls */}\r\n                  <div style={{ \r\n                    display: 'flex', \r\n                    gap: '0.5rem',\r\n                    marginTop: '1rem'\r\n                  }}>\r\n                    <button\r\n                      className=\"btn btn-success btn-small\"\r\n                      onClick={() => handleTaskResult(task.id, 'completed')}\r\n                      style={{ \r\n                        flex: 1,\r\n                        fontSize: '0.8rem',\r\n                        background: 'linear-gradient(135deg, #4CAF50, #66BB6A)'\r\n                      }}\r\n                    >\r\n                      ✅ PASS\r\n                    </button>\r\n                    <button\r\n                      className=\"btn btn-danger btn-small\"\r\n                      onClick={() => handleTaskResult(task.id, 'failed')}\r\n                      style={{ \r\n                        flex: 1,\r\n                        fontSize: '0.8rem',\r\n                        background: 'linear-gradient(135deg, #F44336, #EF5350)'\r\n                      }}\r\n                    >\r\n                      ❌ FAIL\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          )}\r\n        </div>\r\n      )}\r\n\r\n      {/* Completed Tasks */}\r\n      {currentPlayer && getCompletedTasks().length > 0 && (\r\n        <div className=\"card card-success\">\r\n          <h3 style={{ \r\n            fontSize: '1.2rem', \r\n            marginBottom: '1rem',\r\n            textTransform: 'uppercase',\r\n            fontWeight: '800'\r\n          }}>\r\n            ✅ Completed Tasks ({getCompletedTasks().length})\r\n          </h3>\r\n          {getCompletedTasks().slice(0, 3).map(task => (\r\n            <div key={task.id} className=\"task-item completed\">\r\n              <div style={{ fontWeight: '600' }}>\r\n                <div style={{ marginBottom: '0.5rem' }}>\r\n                  {task.text}\r\n                </div>\r\n                <div style={{ \r\n                  fontSize: '0.8rem',\r\n                  color: '#2E7D32',\r\n                  fontWeight: '700'\r\n                }}>\r\n                  ✅ Got {currentGame.players.find(p => p.id === task.targetId)?.name || 'someone'}!\r\n                </div>\r\n              </div>\r\n            </div>\r\n          ))}\r\n          {getCompletedTasks().length > 3 && (\r\n            <div style={{ \r\n              textAlign: 'center',\r\n              padding: '1rem',\r\n              color: '#2E7D32',\r\n              fontWeight: '700'\r\n            }}>\r\n              ... and {getCompletedTasks().length - 3} more! 🎉\r\n            </div>\r\n          )}\r\n        </div>\r\n      )}\r\n\r\n      {/* Failed Tasks */}\r\n      {currentPlayer && getFailedTasks().length > 0 && (\r\n        <div className=\"card card-warning\">\r\n          <h3 style={{ \r\n            fontSize: '1.2rem', \r\n            marginBottom: '1rem',\r\n            textTransform: 'uppercase',\r\n            fontWeight: '800'\r\n          }}>\r\n            ❌ Failed Tasks ({getFailedTasks().length})\r\n          </h3>\r\n          {getFailedTasks().slice(0, 2).map(task => (\r\n            <div key={task.id} className=\"task-item failed\">\r\n              <div style={{ fontWeight: '600' }}>\r\n                <div style={{ marginBottom: '0.5rem' }}>\r\n                  {task.text}\r\n                </div>\r\n                <div style={{ \r\n                  fontSize: '0.8rem',\r\n                  color: '#C62828',\r\n                  fontWeight: '700'\r\n                }}>\r\n                  ❌ Caught or disputed\r\n                </div>\r\n              </div>\r\n            </div>\r\n          ))}\r\n          {getFailedTasks().length > 2 && (\r\n            <div style={{ \r\n              textAlign: 'center',\r\n              padding: '1rem',\r\n              color: '#C62828',\r\n              fontWeight: '700'\r\n            }}>\r\n              ... and {getFailedTasks().length - 2} more\r\n            </div>\r\n          )}\r\n        </div>\r\n      )}\r\n\r\n      {/* Testing Tools */}\r\n      <div className=\"card card-test\">\r\n        <div style={{ \r\n          display: 'flex', \r\n          justifyContent: 'space-between', \r\n          alignItems: 'center',\r\n          marginBottom: '1rem'\r\n        }}>\r\n          <h3 style={{ \r\n            fontSize: '1rem', \r\n            margin: 0,\r\n            textTransform: 'uppercase',\r\n            fontWeight: '800'\r\n          }}>\r\n            🔧 Demo Tools\r\n          </h3>\r\n          <button\r\n            className=\"btn btn-small\"\r\n            onClick={() => setShowTestingTools(!showTestingTools)}\r\n            style={{ \r\n              background: 'rgba(123, 31, 162, 0.2)',\r\n              color: '#7B1FA2',\r\n              border: '2px solid rgba(123, 31, 162, 0.3)',\r\n              minHeight: '32px',\r\n              fontSize: '0.7rem'\r\n            }}\r\n          >\r\n            {showTestingTools ? '▼' : '▶'}\r\n          </button>\r\n        </div>\r\n        \r\n        {showTestingTools && (\r\n          <div style={{ display: 'flex', gap: '0.5rem', flexWrap: 'wrap' }}>\r\n            <button\r\n              className=\"btn btn-secondary btn-small\"\r\n              onClick={() => simulateScore?.(1)}\r\n              style={{ fontSize: '0.7rem' }}\r\n            >\r\n              +1 Point\r\n            </button>\r\n            <button\r\n              className=\"btn btn-danger btn-small\"\r\n              onClick={() => simulateScore?.(-1)}\r\n              style={{ fontSize: '0.7rem' }}\r\n            >\r\n              -1 Point\r\n            </button>\r\n            <button\r\n              className=\"btn btn-secondary btn-small\"\r\n              onClick={endGame}\r\n              style={{ fontSize: '0.7rem' }}\r\n            >\r\n              🏁 End Game\r\n            </button>\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      {/* Target Select Modal */}\r\n      <TargetSelectModal\r\n        isOpen={showTargetModal}\r\n        onClose={() => {\r\n          setShowTargetModal(false);\r\n          setSelectedTask(null);\r\n        }}\r\n        onSelectTarget={handleTargetSelect}\r\n        availableTargets={getAvailableTargets()}\r\n        taskText={selectedTask?.text || ''}\r\n      />\r\n    </div>\r\n  );\r\n} "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}