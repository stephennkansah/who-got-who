{"ast":null,"code":"import React,{useState,useEffect}from'react';import{useParams,useNavigate}from'react-router-dom';import{useGame}from'../context/GameContext';import CardDeck from'./CardDeck';import TargetSelectModal from'./TargetSelectModal';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";export default function Game(){const{gameId}=useParams();const navigate=useNavigate();const{state,claimGotcha,disputeGotcha,acceptGotcha,forceGameState,simulateScore}=useGame();const[showLeaderboard,setShowLeaderboard]=useState(false);const[showTestingTools,setShowTestingTools]=useState(false);const[cardViewMode,setCardViewMode]=useState('deck');const[showTargetModal,setShowTargetModal]=useState(false);const[selectedTask,setSelectedTask]=useState(null);const[currentCardIndex,setCurrentCardIndex]=useState(0);const currentGame=state.currentGame;const currentPlayer=state.currentPlayer;useEffect(()=>{if(!currentGame||!currentPlayer){navigate('/');return;}if(currentGame.status==='draft'){navigate(`/lobby/${gameId}`);}else if(currentGame.status==='ended'){navigate(`/recap/${gameId}`);}},[currentGame,currentPlayer,navigate,gameId]);if(!currentGame||!currentPlayer){return/*#__PURE__*/_jsx(\"div\",{className:\"container\",children:/*#__PURE__*/_jsx(\"div\",{className:\"card\",children:/*#__PURE__*/_jsx(\"p\",{children:\"\\u23F3 Loading game...\"})})});}const getCurrentScore=()=>{return currentPlayer.score||0;};const getPendingTasks=()=>{return currentPlayer.tasks.filter(task=>task.status==='pending');};const getCompletedTasks=()=>{return currentPlayer.tasks.filter(task=>task.status==='got');};const getFailedTasks=()=>{return currentPlayer.tasks.filter(task=>task.status==='failed');};const getAvailableTargets=()=>{return currentGame.players.filter(p=>p.id!==currentPlayer.id);};const handleGotchaClick=task=>{if(task.status!=='pending')return;setSelectedTask(task);setShowTargetModal(true);};const handleTargetSelect=async targetId=>{if(!selectedTask)return;await claimGotcha(selectedTask.id,targetId);setShowTargetModal(false);setSelectedTask(null);};const handleSwapTask=taskId=>{console.log('Swap task:',taskId);};// Create cards for the deck - just for cycling, not completing\nconst createTaskCards=()=>{const pendingTasks=getPendingTasks();return pendingTasks.map((task,index)=>({id:task.id,content:/*#__PURE__*/_jsxs(\"div\",{className:\"task-card-content\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"task-header\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"\\uD83C\\uDFAF Your Mission\"}),/*#__PURE__*/_jsx(\"div\",{className:\"difficulty-badge\",children:/*#__PURE__*/_jsxs(\"span\",{children:[\"\\uD83C\\uDFB2 Level \",task.difficulty]})})]}),/*#__PURE__*/_jsx(\"div\",{className:\"task-text\",children:/*#__PURE__*/_jsx(\"p\",{children:task.text})}),/*#__PURE__*/_jsxs(\"div\",{className:\"task-footer\",children:[/*#__PURE__*/_jsx(\"div\",{style:{marginBottom:'1rem'},children:/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-success\",onClick:()=>handleGotchaClick(task),style:{width:'100%'},children:\"\\uD83C\\uDFAF Claim Gotcha!\"})}),/*#__PURE__*/_jsx(\"div\",{className:\"task-tips\",children:/*#__PURE__*/_jsx(\"p\",{className:\"text-small\",children:\"\\uD83D\\uDCA1 Swipe left/right to see other tasks \\u2022 Tap \\\"Claim Gotcha!\\\" when complete\"})})]})]}),leftAction:'Previous',rightAction:'Next',upAction:'',downAction:'',onSwipeLeft:()=>{// Cycle to previous card\nconst newIndex=index>0?index-1:pendingTasks.length-1;setCurrentCardIndex(newIndex);},onSwipeRight:()=>{// Cycle to next card  \nconst newIndex=index<pendingTasks.length-1?index+1:0;setCurrentCardIndex(newIndex);},onSwipeUp:undefined,onSwipeDown:undefined}));};const taskCards=createTaskCards();return/*#__PURE__*/_jsxs(\"div\",{className:\"container\",children:[/*#__PURE__*/_jsx(\"div\",{style:{marginBottom:'1rem'},children:/*#__PURE__*/_jsxs(\"div\",{className:\"flex flex-between\",style:{alignItems:'center'},children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h1\",{style:{marginBottom:'0.25rem',fontSize:'1.5rem'},children:\"Who Got Who\"}),/*#__PURE__*/_jsxs(\"p\",{className:\"text-small\",style:{color:'rgba(255, 255, 255, 0.8)'},children:[\"\\uD83C\\uDFAE Live \\u2022 ID: \",/*#__PURE__*/_jsx(\"strong\",{children:gameId})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex\",style:{gap:'0.25rem'},children:[/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-small btn-secondary\",onClick:()=>setShowLeaderboard(!showLeaderboard),style:{padding:'6px 12px'},children:\"\\uD83C\\uDFC6\"}),/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-small\",onClick:()=>setCardViewMode(cardViewMode==='deck'?'list':'deck'),style:{padding:'6px 12px'},children:cardViewMode==='deck'?'📋':'🎴'})]})]})}),state.error&&/*#__PURE__*/_jsx(\"div\",{className:\"card card-warning\",children:/*#__PURE__*/_jsx(\"p\",{children:/*#__PURE__*/_jsxs(\"strong\",{children:[\"\\u274C \",state.error]})})}),/*#__PURE__*/_jsx(\"div\",{className:\"card\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"flex flex-between\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"h3\",{children:[\"\\uD83D\\uDC64 \",currentPlayer.name]}),/*#__PURE__*/_jsx(\"p\",{className:\"text-small\",children:\"Your progress in this game\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"text-center\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"score-badge\",style:{fontSize:'1.2rem',padding:'12px 20px'},children:[getCurrentScore(),\" pts\"]}),/*#__PURE__*/_jsxs(\"div\",{className:\"text-small\",style:{marginTop:'0.5rem'},children:[\"Goal: \",currentGame.settings.targetScore]})]})]})}),showLeaderboard&&/*#__PURE__*/_jsxs(\"div\",{className:\"card\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"\\uD83C\\uDFC6 Live Leaderboard\"}),currentGame.players.sort((a,b)=>(b.score||0)-(a.score||0)).map((player,index)=>/*#__PURE__*/_jsxs(\"div\",{className:\"flex flex-between\",style:{padding:'1rem',borderRadius:'12px',margin:'0.5rem 0',background:player.id===currentPlayer.id?'rgba(255, 107, 107, 0.3)':'rgba(255, 255, 255, 0.1)',border:'1px solid rgba(255, 255, 255, 0.2)'},children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"span\",{style:{marginRight:'1rem',fontSize:'1.2rem'},children:index===0?'🥇':index===1?'🥈':index===2?'🥉':`${index+1}.`}),/*#__PURE__*/_jsx(\"strong\",{children:player.name}),player.id===currentPlayer.id&&/*#__PURE__*/_jsx(\"span\",{className:\"text-small\",children:\" \\uD83D\\uDC64 (You)\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"score-badge\",children:player.score||0})]},player.id))]}),cardViewMode==='deck'?/*#__PURE__*/_jsxs(\"div\",{className:\"card\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"card-header\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"\\uD83C\\uDFB4 Your Task Cards\"}),/*#__PURE__*/_jsx(\"div\",{className:\"text-small\",children:\"Swipe left/right to cycle \\u2022 Tap button to claim Gotcha!\"})]}),taskCards.length>0?/*#__PURE__*/_jsx(CardDeck,{cards:taskCards,maxVisible:1,emptyState:/*#__PURE__*/_jsxs(\"div\",{className:\"empty-deck\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"empty-deck-icon\",children:\"\\uD83C\\uDF89\"}),/*#__PURE__*/_jsx(\"h3\",{children:\"All Tasks Complete!\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Great job! Check the leaderboard to see your standing.\"})]})}):/*#__PURE__*/_jsxs(\"div\",{className:\"text-center\",style:{padding:'3rem'},children:[/*#__PURE__*/_jsx(\"div\",{style:{fontSize:'4rem',marginBottom:'1rem'},children:\"\\uD83C\\uDF89\"}),/*#__PURE__*/_jsx(\"h3\",{children:\"All Tasks Complete!\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-small\",children:\"You've finished all your tasks! Check the leaderboard.\"})]})]}):/*#__PURE__*//* List View */_jsxs(\"div\",{className:\"card\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"card-header\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"\\uD83D\\uDCCB Your Tasks\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"text-small\",children:[\"Pending: \",getPendingTasks().length,\" \\u2022 Completed: \",getCompletedTasks().length,\" \\u2022 Failed: \",getFailedTasks().length]})]}),getPendingTasks().map(task=>/*#__PURE__*/_jsxs(\"div\",{className:\"task-item\",children:[/*#__PURE__*/_jsxs(\"div\",{style:{marginBottom:'1rem'},children:[/*#__PURE__*/_jsx(\"p\",{children:/*#__PURE__*/_jsx(\"strong\",{children:task.text})}),/*#__PURE__*/_jsxs(\"div\",{className:\"text-small\",style:{opacity:0.8,marginTop:'0.5rem'},children:[\"\\uD83C\\uDFB2 Difficulty: \",task.difficulty,\"/5\"]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex\",style:{gap:'0.5rem'},children:[/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-success\",onClick:()=>handleGotchaClick(task),disabled:state.isLoading,style:{flex:1},children:\"\\uD83C\\uDFAF Claim Gotcha!\"}),currentPlayer.swapsLeft>0&&/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-small btn-secondary\",onClick:()=>handleSwapTask(task.id),disabled:state.isLoading,children:\"\\uD83D\\uDD04 Swap\"})]})]},task.id)),getCompletedTasks().map(task=>/*#__PURE__*/_jsx(\"div\",{className:\"task-item completed\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"flex flex-between\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"p\",{children:/*#__PURE__*/_jsx(\"strong\",{children:task.text})}),/*#__PURE__*/_jsx(\"div\",{className:\"text-small\",style:{opacity:0.8,marginTop:'0.25rem'},children:\"\\u2705 Completed \\u2022 +1 point\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"score-badge\",style:{background:'linear-gradient(135deg, #56ab2f, #a8e6cf)'},children:\"\\u2705 Got\"})]})},task.id)),getFailedTasks().map(task=>/*#__PURE__*/_jsx(\"div\",{className:\"task-item failed\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"flex flex-between\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"p\",{children:/*#__PURE__*/_jsx(\"strong\",{children:task.text})}),/*#__PURE__*/_jsx(\"div\",{className:\"text-small\",style:{opacity:0.8,marginTop:'0.25rem'},children:\"\\u274C Failed \\u2022 No points\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"score-badge\",style:{background:'linear-gradient(135deg, #ff416c, #ff4757)'},children:\"\\u274C Failed\"})]})},task.id)),currentPlayer.tasks.length===0&&/*#__PURE__*/_jsx(\"div\",{className:\"text-center text-small\",style:{padding:'2rem',opacity:0.7},children:/*#__PURE__*/_jsx(\"p\",{children:\"\\u23F3 No tasks assigned yet. Waiting for game to start...\"})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"card card-demo\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"\\uD83D\\uDCCA Game Status\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"text-small\",style:{lineHeight:'1.8'},children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex flex-between\",style:{margin:'0.5rem 0'},children:[/*#__PURE__*/_jsx(\"span\",{children:\"\\uD83C\\uDFAF Your Score:\"}),/*#__PURE__*/_jsxs(\"strong\",{children:[getCurrentScore(),\" / \",currentGame.settings.targetScore]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex flex-between\",style:{margin:'0.5rem 0'},children:[/*#__PURE__*/_jsx(\"span\",{children:\"\\uD83D\\uDCCB Tasks Remaining:\"}),/*#__PURE__*/_jsx(\"strong\",{children:getPendingTasks().length})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex flex-between\",style:{margin:'0.5rem 0'},children:[/*#__PURE__*/_jsx(\"span\",{children:\"\\uD83D\\uDC65 Total Players:\"}),/*#__PURE__*/_jsx(\"strong\",{children:currentGame.players.length})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex flex-between\",style:{margin:'0.5rem 0'},children:[/*#__PURE__*/_jsx(\"span\",{children:\"\\uD83C\\uDFAE Game Mode:\"}),/*#__PURE__*/_jsx(\"strong\",{style:{color:currentGame.mode==='casual'?'#56ab2f':'#ff416c'},children:currentGame.mode==='casual'?'🌟 Casual':'⚔️ Competitive'})]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"card card-test\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex flex-between\",style:{marginBottom:'1rem'},children:[/*#__PURE__*/_jsx(\"h3\",{children:\"\\uD83E\\uDDEA Demo Testing Tools\"}),/*#__PURE__*/_jsxs(\"button\",{className:\"btn btn-small btn-secondary\",onClick:()=>setShowTestingTools(!showTestingTools),children:[showTestingTools?'🙈 Hide':'👀 Show',\" Tools\"]})]}),showTestingTools&&/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"p\",{className:\"text-small\",style:{marginBottom:'1rem'},children:\"Test game mechanics and scoring:\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex\",style:{gap:'0.5rem',flexWrap:'wrap',marginBottom:'1rem'},children:[/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-small btn-success\",onClick:()=>simulateScore===null||simulateScore===void 0?void 0:simulateScore(1),children:\"+1 Point\"}),/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-small btn-danger\",onClick:()=>simulateScore===null||simulateScore===void 0?void 0:simulateScore(-1),children:\"-1 Point\"}),/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-small\",onClick:()=>forceGameState===null||forceGameState===void 0?void 0:forceGameState('ended'),style:{background:'linear-gradient(135deg, #ffd700, #ffed4e)',color:'#000'},children:\"\\uD83C\\uDFC6 End Game Now\"})]}),/*#__PURE__*/_jsxs(\"p\",{className:\"text-small\",children:[\"Current Score: \",getCurrentScore(),\" | Target: \",currentGame.settings.targetScore,\" | Tasks Left: \",getPendingTasks().length]})]})]}),/*#__PURE__*/_jsx(TargetSelectModal,{isOpen:showTargetModal,onClose:()=>{setShowTargetModal(false);setSelectedTask(null);},onSelectTarget:handleTargetSelect,availableTargets:getAvailableTargets(),taskText:(selectedTask===null||selectedTask===void 0?void 0:selectedTask.text)||''})]});}","map":{"version":3,"names":["React","useState","useEffect","useParams","useNavigate","useGame","CardDeck","TargetSelectModal","jsx","_jsx","jsxs","_jsxs","Game","gameId","navigate","state","claimGotcha","disputeGotcha","acceptGotcha","forceGameState","simulateScore","showLeaderboard","setShowLeaderboard","showTestingTools","setShowTestingTools","cardViewMode","setCardViewMode","showTargetModal","setShowTargetModal","selectedTask","setSelectedTask","currentCardIndex","setCurrentCardIndex","currentGame","currentPlayer","status","className","children","getCurrentScore","score","getPendingTasks","tasks","filter","task","getCompletedTasks","getFailedTasks","getAvailableTargets","players","p","id","handleGotchaClick","handleTargetSelect","targetId","handleSwapTask","taskId","console","log","createTaskCards","pendingTasks","map","index","content","difficulty","text","style","marginBottom","onClick","width","leftAction","rightAction","upAction","downAction","onSwipeLeft","newIndex","length","onSwipeRight","onSwipeUp","undefined","onSwipeDown","taskCards","alignItems","fontSize","color","gap","padding","error","name","marginTop","settings","targetScore","sort","a","b","player","borderRadius","margin","background","border","marginRight","cards","maxVisible","emptyState","opacity","disabled","isLoading","flex","swapsLeft","lineHeight","mode","flexWrap","isOpen","onClose","onSelectTarget","availableTargets","taskText"],"sources":["C:/Users/super/OneDrive/Desktop/React progams/who got who/src/components/Game.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useParams, useNavigate } from 'react-router-dom';\r\nimport { useGame } from '../context/GameContext';\r\nimport { TaskInstance, Player } from '../types';\r\nimport CardDeck from './CardDeck';\r\nimport TargetSelectModal from './TargetSelectModal';\r\n\r\nexport default function Game() {\r\n  const { gameId } = useParams<{ gameId: string }>();\r\n  const navigate = useNavigate();\r\n  const { state, claimGotcha, disputeGotcha, acceptGotcha, forceGameState, simulateScore } = useGame();\r\n\r\n  const [showLeaderboard, setShowLeaderboard] = useState(false);\r\n  const [showTestingTools, setShowTestingTools] = useState(false);\r\n  const [cardViewMode, setCardViewMode] = useState<'deck' | 'list'>('deck');\r\n  const [showTargetModal, setShowTargetModal] = useState(false);\r\n  const [selectedTask, setSelectedTask] = useState<TaskInstance | null>(null);\r\n  const [currentCardIndex, setCurrentCardIndex] = useState(0);\r\n\r\n  const currentGame = state.currentGame;\r\n  const currentPlayer = state.currentPlayer;\r\n\r\n  useEffect(() => {\r\n    if (!currentGame || !currentPlayer) {\r\n      navigate('/');\r\n      return;\r\n    }\r\n\r\n    if (currentGame.status === 'draft') {\r\n      navigate(`/lobby/${gameId}`);\r\n    } else if (currentGame.status === 'ended') {\r\n      navigate(`/recap/${gameId}`);\r\n    }\r\n  }, [currentGame, currentPlayer, navigate, gameId]);\r\n\r\n  if (!currentGame || !currentPlayer) {\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"card\">\r\n          <p>⏳ Loading game...</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  const getCurrentScore = () => {\r\n    return currentPlayer.score || 0;\r\n  };\r\n\r\n  const getPendingTasks = () => {\r\n    return currentPlayer.tasks.filter((task: TaskInstance) => task.status === 'pending');\r\n  };\r\n\r\n  const getCompletedTasks = () => {\r\n    return currentPlayer.tasks.filter((task: TaskInstance) => task.status === 'got');\r\n  };\r\n\r\n  const getFailedTasks = () => {\r\n    return currentPlayer.tasks.filter((task: TaskInstance) => task.status === 'failed');\r\n  };\r\n\r\n  const getAvailableTargets = (): Player[] => {\r\n    return currentGame.players.filter(p => p.id !== currentPlayer.id);\r\n  };\r\n\r\n  const handleGotchaClick = (task: TaskInstance) => {\r\n    if (task.status !== 'pending') return;\r\n    setSelectedTask(task);\r\n    setShowTargetModal(true);\r\n  };\r\n\r\n  const handleTargetSelect = async (targetId: string) => {\r\n    if (!selectedTask) return;\r\n    \r\n    await claimGotcha(selectedTask.id, targetId);\r\n    setShowTargetModal(false);\r\n    setSelectedTask(null);\r\n  };\r\n\r\n  const handleSwapTask = (taskId: string) => {\r\n    console.log('Swap task:', taskId);\r\n  };\r\n\r\n  // Create cards for the deck - just for cycling, not completing\r\n  const createTaskCards = () => {\r\n    const pendingTasks = getPendingTasks();\r\n    \r\n    return pendingTasks.map((task: TaskInstance, index: number) => ({\r\n      id: task.id,\r\n      content: (\r\n        <div className=\"task-card-content\">\r\n          <div className=\"task-header\">\r\n            <h3>🎯 Your Mission</h3>\r\n            <div className=\"difficulty-badge\">\r\n              <span>🎲 Level {task.difficulty}</span>\r\n            </div>\r\n          </div>\r\n          \r\n          <div className=\"task-text\">\r\n            <p>{task.text}</p>\r\n          </div>\r\n          \r\n          <div className=\"task-footer\">\r\n            <div style={{ marginBottom: '1rem' }}>\r\n              <button\r\n                className=\"btn btn-success\"\r\n                onClick={() => handleGotchaClick(task)}\r\n                style={{ width: '100%' }}\r\n              >\r\n                🎯 Claim Gotcha!\r\n              </button>\r\n            </div>\r\n            <div className=\"task-tips\">\r\n              <p className=\"text-small\">💡 Swipe left/right to see other tasks • Tap \"Claim Gotcha!\" when complete</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ),\r\n      leftAction: 'Previous',\r\n      rightAction: 'Next',\r\n      upAction: '',\r\n      downAction: '',\r\n      onSwipeLeft: () => {\r\n        // Cycle to previous card\r\n        const newIndex = index > 0 ? index - 1 : pendingTasks.length - 1;\r\n        setCurrentCardIndex(newIndex);\r\n      },\r\n      onSwipeRight: () => {\r\n        // Cycle to next card  \r\n        const newIndex = index < pendingTasks.length - 1 ? index + 1 : 0;\r\n        setCurrentCardIndex(newIndex);\r\n      },\r\n      onSwipeUp: undefined,\r\n      onSwipeDown: undefined\r\n    }));\r\n  };\r\n\r\n  const taskCards = createTaskCards();\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      {/* Header */}\r\n      <div style={{ marginBottom: '1rem' }}>\r\n        <div className=\"flex flex-between\" style={{ alignItems: 'center' }}>\r\n          <div>\r\n            <h1 style={{ marginBottom: '0.25rem', fontSize: '1.5rem' }}>Who Got Who</h1>\r\n            <p className=\"text-small\" style={{ color: 'rgba(255, 255, 255, 0.8)' }}>🎮 Live • ID: <strong>{gameId}</strong></p>\r\n          </div>\r\n          <div className=\"flex\" style={{ gap: '0.25rem' }}>\r\n            <button \r\n              className=\"btn btn-small btn-secondary\"\r\n              onClick={() => setShowLeaderboard(!showLeaderboard)}\r\n              style={{ padding: '6px 12px' }}\r\n            >\r\n              🏆\r\n            </button>\r\n            <button \r\n              className=\"btn btn-small\"\r\n              onClick={() => setCardViewMode(cardViewMode === 'deck' ? 'list' : 'deck')}\r\n              style={{ padding: '6px 12px' }}\r\n            >\r\n              {cardViewMode === 'deck' ? '📋' : '🎴'}\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {state.error && (\r\n        <div className=\"card card-warning\">\r\n          <p><strong>❌ {state.error}</strong></p>\r\n        </div>\r\n      )}\r\n\r\n      {/* Player Status */}\r\n      <div className=\"card\">\r\n        <div className=\"flex flex-between\">\r\n          <div>\r\n            <h3>👤 {currentPlayer.name}</h3>\r\n            <p className=\"text-small\">Your progress in this game</p>\r\n          </div>\r\n          <div className=\"text-center\">\r\n            <div className=\"score-badge\" style={{ fontSize: '1.2rem', padding: '12px 20px' }}>\r\n              {getCurrentScore()} pts\r\n            </div>\r\n            <div className=\"text-small\" style={{ marginTop: '0.5rem' }}>\r\n              Goal: {currentGame.settings.targetScore}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Leaderboard */}\r\n      {showLeaderboard && (\r\n        <div className=\"card\">\r\n          <h3>🏆 Live Leaderboard</h3>\r\n          {currentGame.players\r\n            .sort((a: Player, b: Player) => (b.score || 0) - (a.score || 0))\r\n            .map((player: Player, index: number) => (\r\n              <div key={player.id} className=\"flex flex-between\" style={{ \r\n                padding: '1rem', \r\n                borderRadius: '12px',\r\n                margin: '0.5rem 0',\r\n                background: player.id === currentPlayer.id \r\n                  ? 'rgba(255, 107, 107, 0.3)' \r\n                  : 'rgba(255, 255, 255, 0.1)',\r\n                border: '1px solid rgba(255, 255, 255, 0.2)'\r\n              }}>\r\n                <div>\r\n                  <span style={{ marginRight: '1rem', fontSize: '1.2rem' }}>\r\n                    {index === 0 ? '🥇' : index === 1 ? '🥈' : index === 2 ? '🥉' : `${index + 1}.`}\r\n                  </span>\r\n                  <strong>{player.name}</strong>\r\n                  {player.id === currentPlayer.id && <span className=\"text-small\"> 👤 (You)</span>}\r\n                </div>\r\n                <div className=\"score-badge\">\r\n                  {player.score || 0}\r\n                </div>\r\n              </div>\r\n            ))}\r\n        </div>\r\n      )}\r\n\r\n      {/* Task Cards */}\r\n      {cardViewMode === 'deck' ? (\r\n        <div className=\"card\">\r\n          <div className=\"card-header\">\r\n            <h3>🎴 Your Task Cards</h3>\r\n            <div className=\"text-small\">Swipe left/right to cycle • Tap button to claim Gotcha!</div>\r\n          </div>\r\n          \r\n          {taskCards.length > 0 ? (\r\n            <CardDeck\r\n              cards={taskCards}\r\n              maxVisible={1}\r\n              emptyState={\r\n                <div className=\"empty-deck\">\r\n                  <div className=\"empty-deck-icon\">🎉</div>\r\n                  <h3>All Tasks Complete!</h3>\r\n                  <p>Great job! Check the leaderboard to see your standing.</p>\r\n                </div>\r\n              }\r\n            />\r\n          ) : (\r\n            <div className=\"text-center\" style={{ padding: '3rem' }}>\r\n              <div style={{ fontSize: '4rem', marginBottom: '1rem' }}>🎉</div>\r\n              <h3>All Tasks Complete!</h3>\r\n              <p className=\"text-small\">You've finished all your tasks! Check the leaderboard.</p>\r\n            </div>\r\n          )}\r\n        </div>\r\n      ) : (\r\n        /* List View */\r\n        <div className=\"card\">\r\n          <div className=\"card-header\">\r\n            <h3>📋 Your Tasks</h3>\r\n            <div className=\"text-small\">\r\n              Pending: {getPendingTasks().length} • \r\n              Completed: {getCompletedTasks().length} • \r\n              Failed: {getFailedTasks().length}\r\n            </div>\r\n          </div>\r\n\r\n          {/* Pending Tasks */}\r\n          {getPendingTasks().map((task: TaskInstance) => (\r\n            <div key={task.id} className=\"task-item\">\r\n              <div style={{ marginBottom: '1rem' }}>\r\n                <p><strong>{task.text}</strong></p>\r\n                <div className=\"text-small\" style={{ opacity: 0.8, marginTop: '0.5rem' }}>\r\n                  🎲 Difficulty: {task.difficulty}/5\r\n                </div>\r\n              </div>\r\n              \r\n              <div className=\"flex\" style={{ gap: '0.5rem' }}>\r\n                <button\r\n                  className=\"btn btn-success\"\r\n                  onClick={() => handleGotchaClick(task)}\r\n                  disabled={state.isLoading}\r\n                  style={{ flex: 1 }}\r\n                >\r\n                  🎯 Claim Gotcha!\r\n                </button>\r\n                \r\n                {currentPlayer.swapsLeft > 0 && (\r\n                  <button\r\n                    className=\"btn btn-small btn-secondary\"\r\n                    onClick={() => handleSwapTask(task.id)}\r\n                    disabled={state.isLoading}\r\n                  >\r\n                    🔄 Swap\r\n                  </button>\r\n                )}\r\n              </div>\r\n            </div>\r\n          ))}\r\n\r\n          {/* Completed Tasks */}\r\n          {getCompletedTasks().map((task: TaskInstance) => (\r\n            <div key={task.id} className=\"task-item completed\">\r\n              <div className=\"flex flex-between\">\r\n                <div>\r\n                  <p><strong>{task.text}</strong></p>\r\n                  <div className=\"text-small\" style={{ opacity: 0.8, marginTop: '0.25rem' }}>\r\n                    ✅ Completed • +1 point\r\n                  </div>\r\n                </div>\r\n                <div className=\"score-badge\" style={{ background: 'linear-gradient(135deg, #56ab2f, #a8e6cf)' }}>\r\n                  ✅ Got\r\n                </div>\r\n              </div>\r\n            </div>\r\n          ))}\r\n\r\n          {/* Failed Tasks */}\r\n          {getFailedTasks().map((task: TaskInstance) => (\r\n            <div key={task.id} className=\"task-item failed\">\r\n              <div className=\"flex flex-between\">\r\n                <div>\r\n                  <p><strong>{task.text}</strong></p>\r\n                  <div className=\"text-small\" style={{ opacity: 0.8, marginTop: '0.25rem' }}>\r\n                    ❌ Failed • No points\r\n                  </div>\r\n                </div>\r\n                <div className=\"score-badge\" style={{ background: 'linear-gradient(135deg, #ff416c, #ff4757)' }}>\r\n                  ❌ Failed\r\n                </div>\r\n              </div>\r\n            </div>\r\n          ))}\r\n\r\n          {currentPlayer.tasks.length === 0 && (\r\n            <div className=\"text-center text-small\" style={{ padding: '2rem', opacity: 0.7 }}>\r\n              <p>⏳ No tasks assigned yet. Waiting for game to start...</p>\r\n            </div>\r\n          )}\r\n        </div>\r\n      )}\r\n\r\n      {/* Game Status */}\r\n      <div className=\"card card-demo\">\r\n        <h3>📊 Game Status</h3>\r\n        <div className=\"text-small\" style={{ lineHeight: '1.8' }}>\r\n          <div className=\"flex flex-between\" style={{ margin: '0.5rem 0' }}>\r\n            <span>🎯 Your Score:</span>\r\n            <strong>{getCurrentScore()} / {currentGame.settings.targetScore}</strong>\r\n          </div>\r\n          <div className=\"flex flex-between\" style={{ margin: '0.5rem 0' }}>\r\n            <span>📋 Tasks Remaining:</span>\r\n            <strong>{getPendingTasks().length}</strong>\r\n          </div>\r\n          <div className=\"flex flex-between\" style={{ margin: '0.5rem 0' }}>\r\n            <span>👥 Total Players:</span>\r\n            <strong>{currentGame.players.length}</strong>\r\n          </div>\r\n          <div className=\"flex flex-between\" style={{ margin: '0.5rem 0' }}>\r\n            <span>🎮 Game Mode:</span>\r\n            <strong style={{ color: currentGame.mode === 'casual' ? '#56ab2f' : '#ff416c' }}>\r\n              {currentGame.mode === 'casual' ? '🌟 Casual' : '⚔️ Competitive'}\r\n            </strong>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Testing Tools */}\r\n      <div className=\"card card-test\">\r\n        <div className=\"flex flex-between\" style={{ marginBottom: '1rem' }}>\r\n          <h3>🧪 Demo Testing Tools</h3>\r\n          <button \r\n            className=\"btn btn-small btn-secondary\"\r\n            onClick={() => setShowTestingTools(!showTestingTools)}\r\n          >\r\n            {showTestingTools ? '🙈 Hide' : '👀 Show'} Tools\r\n          </button>\r\n        </div>\r\n        \r\n        {showTestingTools && (\r\n          <div>\r\n            <p className=\"text-small\" style={{ marginBottom: '1rem' }}>\r\n              Test game mechanics and scoring:\r\n            </p>\r\n            \r\n            <div className=\"flex\" style={{ gap: '0.5rem', flexWrap: 'wrap', marginBottom: '1rem' }}>\r\n              <button\r\n                className=\"btn btn-small btn-success\"\r\n                onClick={() => simulateScore?.(1)}\r\n              >\r\n                +1 Point\r\n              </button>\r\n              \r\n              <button\r\n                className=\"btn btn-small btn-danger\"\r\n                onClick={() => simulateScore?.(-1)}\r\n              >\r\n                -1 Point\r\n              </button>\r\n              \r\n              <button\r\n                className=\"btn btn-small\"\r\n                onClick={() => forceGameState?.('ended')}\r\n                style={{ background: 'linear-gradient(135deg, #ffd700, #ffed4e)', color: '#000' }}\r\n              >\r\n                🏆 End Game Now\r\n              </button>\r\n            </div>\r\n            \r\n            <p className=\"text-small\">\r\n              Current Score: {getCurrentScore()} | \r\n              Target: {currentGame.settings.targetScore} | \r\n              Tasks Left: {getPendingTasks().length}\r\n            </p>\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      {/* Target Selection Modal */}\r\n      <TargetSelectModal\r\n        isOpen={showTargetModal}\r\n        onClose={() => {\r\n          setShowTargetModal(false);\r\n          setSelectedTask(null);\r\n        }}\r\n        onSelectTarget={handleTargetSelect}\r\n        availableTargets={getAvailableTargets()}\r\n        taskText={selectedTask?.text || ''}\r\n      />\r\n    </div>\r\n  );\r\n} "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}